server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    error_log /dev/stderr debug;
    client_max_body_size 20M;

    resolver 127.0.0.11 valid=10s;

    add_header 'Access-Control-Allow-Origin' ${PUBLIC_ORIGIN};
    # cookies
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

    # Custom headers and headers various browsers *should* be OK with but aren't
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

    if ($request_method = 'OPTIONS') {
        # Tell client that this pre-flight info is valid for 20 days
        # add_header 'Access-Control-Max-Age' 1728000;
        # add_header 'Content-Type' 'text/plain charset=UTF-8';
        # add_header 'Content-Length' 0;
        return 204;
    }

    location /static/images {

    }

    location /otomads {
        proxy_pass http://minio:9000$request_uri;
        limit_except GET { deny  all; }
    }

    location /api/ {
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header 'Access-Control-Allow-Origin' ${PUBLIC_ORIGIN};
        # cookies
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        # Custom headers and headers various browsers *should* be OK with but aren't
        proxy_set_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        proxy_pass_request_headers      on;
        proxy_pass http://frontapi:8083$request_uri;
        proxy_request_buffering off;
    }

    location /ws {
        proxy_pass http://stomp_proxy:15674/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    location /_next/webpack-hmr {
        proxy_pass ${PUBLIC_ORIGIN}/_next/webpack-hmr;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    location / {
        proxy_pass ${PUBLIC_ORIGIN}$request_uri;
    }
}
