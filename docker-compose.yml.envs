version: "3"

services:
  react_app:
    build: webapp
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./webapp:/webapp
  frontapi:
    $FRONT_API_BUILD_DIRECTIVE
    restart: always
    ports:
      - "8083:8083"
    environment:
      - GOLANG_PROTOBUF_REGISTRATION_CONFLICT=warn
      - UserServiceGRPCAddress=userservice:7777
      - VideoServiceGRPCAddress=videoservice:7777
      - SchedulerServiceGRPCAddress=scheduler:7777
      - JaegerAddress=
  scheduler:
    $SCHEDULER_BUILD_DIRECTIVE
    restart: always
    environment:
      - GOLANG_PROTOBUF_REGISTRATION_CONFLICT=warn
      - pgs_host=postgres
      - pgs_port=5432
      - pgs_user=admin
      - pgs_pass=password
      - pgs_db=scheduler
      - redis_host=redis
      - redis_port=6379
      - redis_pass=
      # TODO(ivan): probably should add this to config
      - GRPCPort=7777
      - VideoServiceGRPCAddress=videoservice:7777
      - NumberOfRetries=1
      - SocksConn=
      - SyncPollDelay=1m
      - MaxDLFileSize=300
  videoservice:
    $VIDEOSERVICE_BUILD_DIRECTIVE
    restart: always
    environment:
      - GOLANG_PROTOBUF_REGISTRATION_CONFLICT=warn
      - pgs_host=postgres
      - pgs_port=5432
      - pgs_user=admin
      - pgs_pass=password
      - pgs_db=videoservice
      - redis_host=redis
      - redis_port=6379
      - redis_pass=
      - GRPCPort=7777
      - UserServiceGRPCAddress=userservice:7777
      - BucketName=$BUCKET_NAME
      - Local=false
      - OriginFQDN=$ORIGIN_FQDN
      - AWS_DEFAULT_REGION=
      - JaegerAddress=
      - StorageBackend=$STORAGE_BACKEND
      - StorageAPIID=$STORAGE_API_ID
      - StorageAPIKey=$STORAGE_API_KEY
      - MinioEndpoint=minio:9000
      - ApprovalThreshold=1
    volumes:
    - $HOME/.aws/:/root/.aws/:ro
  userservice:
    $USERSERVICE_BUILD_DIRECTIVE
    restart: always
    environment:
      - GOLANG_PROTOBUF_REGISTRATION_CONFLICT=warn
      - pgs_host=postgres
      - pgs_port=5432
      - pgs_user=admin
      - pgs_pass=password
      - pgs_db=userservice
      - |
        RSA_KEYPAIR=
$JWT_KEYPAIR
      - GRPCPort=7777
  backup_service:
    build: backup_service
    restart: always
    environment:
      - scheduler_pgs_host=postgres
      - scheduler_pgs_username=admin
      - scheduler_pgs_password=password
      - scheduler_pgs_database=scheduler
      - video_pgs_host=postgres
      - video_pgs_username=admin
      - video_pgs_password=password
      - video_pgs_database=videoservice
      - user_pgs_host=postgres
      - user_pgs_username=admin
      - user_pgs_password=password
      - user_pgs_database=userservice
      - StorageAPIID=$STORAGE_API_ID
      - StorageAPIKey=$STORAGE_API_KEY
  redis:
    image: "redis:alpine"
    restart: always
  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - postgresdata:/var/lib/postgresql/data
  minio:
    build: minio
    restart: always
    ports:
      - "9000:9000"
    environment:
      BUCKET_NAME: otomads
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./videos:/data

volumes:
  postgresdata:

