// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: video_service/protocol/videoservice.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Website int32

const (
	Website_niconico Website = 0
	Website_bilibili Website = 1
	Website_youtube  Website = 2
)

// Enum value maps for Website.
var (
	Website_name = map[int32]string{
		0: "niconico",
		1: "bilibili",
		2: "youtube",
	}
	Website_value = map[string]int32{
		"niconico": 0,
		"bilibili": 1,
		"youtube":  2,
	}
)

func (x Website) Enum() *Website {
	p := new(Website)
	*p = x
	return p
}

func (x Website) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Website) Descriptor() protoreflect.EnumDescriptor {
	return file_video_service_protocol_videoservice_proto_enumTypes[0].Descriptor()
}

func (Website) Type() protoreflect.EnumType {
	return &file_video_service_protocol_videoservice_proto_enumTypes[0]
}

func (x Website) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Website.Descriptor instead.
func (Website) EnumDescriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{0}
}

type OrderCategory int32

const (
	OrderCategory_views       OrderCategory = 0
	OrderCategory_rating      OrderCategory = 1
	OrderCategory_upload_date OrderCategory = 2
)

// Enum value maps for OrderCategory.
var (
	OrderCategory_name = map[int32]string{
		0: "views",
		1: "rating",
		2: "upload_date",
	}
	OrderCategory_value = map[string]int32{
		"views":       0,
		"rating":      1,
		"upload_date": 2,
	}
)

func (x OrderCategory) Enum() *OrderCategory {
	p := new(OrderCategory)
	*p = x
	return p
}

func (x OrderCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_video_service_protocol_videoservice_proto_enumTypes[1].Descriptor()
}

func (OrderCategory) Type() protoreflect.EnumType {
	return &file_video_service_protocol_videoservice_proto_enumTypes[1]
}

func (x OrderCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderCategory.Descriptor instead.
func (OrderCategory) EnumDescriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{1}
}

type SortDirection int32

const (
	SortDirection_asc  SortDirection = 0
	SortDirection_desc SortDirection = 2
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "asc",
		2: "desc",
	}
	SortDirection_value = map[string]int32{
		"asc":  0,
		"desc": 2,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_video_service_protocol_videoservice_proto_enumTypes[2].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_video_service_protocol_videoservice_proto_enumTypes[2]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{2}
}

type Nothing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Nothing) Reset() {
	*x = Nothing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nothing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nothing) ProtoMessage() {}

func (x *Nothing) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nothing.ProtoReflect.Descriptor instead.
func (*Nothing) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{0}
}

type RecReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RecReq) Reset() {
	*x = RecReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecReq) ProtoMessage() {}

func (x *RecReq) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecReq.ProtoReflect.Descriptor instead.
func (*RecReq) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{1}
}

func (x *RecReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RecResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Videos []*VideoRec `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
}

func (x *RecResp) Reset() {
	*x = RecResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecResp) ProtoMessage() {}

func (x *RecResp) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecResp.ProtoReflect.Descriptor instead.
func (*RecResp) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{2}
}

func (x *RecResp) GetVideos() []*VideoRec {
	if x != nil {
		return x.Videos
	}
	return nil
}

type VideoRec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThumbnailLoc string `protobuf:"bytes,1,opt,name=thumbnailLoc,proto3" json:"thumbnailLoc,omitempty"`
	VideoTitle   string `protobuf:"bytes,2,opt,name=videoTitle,proto3" json:"videoTitle,omitempty"`
	VideoID      int64  `protobuf:"varint,3,opt,name=videoID,proto3" json:"videoID,omitempty"`
}

func (x *VideoRec) Reset() {
	*x = VideoRec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoRec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoRec) ProtoMessage() {}

func (x *VideoRec) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoRec.ProtoReflect.Descriptor instead.
func (*VideoRec) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{3}
}

func (x *VideoRec) GetThumbnailLoc() string {
	if x != nil {
		return x.ThumbnailLoc
	}
	return ""
}

func (x *VideoRec) GetVideoTitle() string {
	if x != nil {
		return x.VideoTitle
	}
	return ""
}

func (x *VideoRec) GetVideoID() int64 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

type VideoComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId       int64  `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Comment       string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	ParentComment int64  `protobuf:"varint,4,opt,name=parent_comment,json=parentComment,proto3" json:"parent_comment,omitempty"` // 0 if root
}

func (x *VideoComment) Reset() {
	*x = VideoComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoComment) ProtoMessage() {}

func (x *VideoComment) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoComment.ProtoReflect.Descriptor instead.
func (*VideoComment) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{4}
}

func (x *VideoComment) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *VideoComment) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *VideoComment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *VideoComment) GetParentComment() int64 {
	if x != nil {
		return x.ParentComment
	}
	return 0
}

// Can add pagination in the future if needed (probably fine without it)
type CommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoID    int64 `protobuf:"varint,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
	CurrUserID int64 `protobuf:"varint,2,opt,name=currUserID,proto3" json:"currUserID,omitempty"`
}

func (x *CommentRequest) Reset() {
	*x = CommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentRequest) ProtoMessage() {}

func (x *CommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentRequest.ProtoReflect.Descriptor instead.
func (*CommentRequest) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{5}
}

func (x *CommentRequest) GetVideoID() int64 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

func (x *CommentRequest) GetCurrUserID() int64 {
	if x != nil {
		return x.CurrUserID
	}
	return 0
}

type CommentUpvote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommentId int64 `protobuf:"varint,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	IsUpvote  bool  `protobuf:"varint,3,opt,name=is_upvote,json=isUpvote,proto3" json:"is_upvote,omitempty"`
}

func (x *CommentUpvote) Reset() {
	*x = CommentUpvote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentUpvote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentUpvote) ProtoMessage() {}

func (x *CommentUpvote) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentUpvote.ProtoReflect.Descriptor instead.
func (*CommentUpvote) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{6}
}

func (x *CommentUpvote) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentUpvote) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentUpvote) GetIsUpvote() bool {
	if x != nil {
		return x.IsUpvote
	}
	return false
}

type CommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *CommentListResponse) Reset() {
	*x = CommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListResponse) ProtoMessage() {}

func (x *CommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListResponse.ProtoReflect.Descriptor instead.
func (*CommentListResponse) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{7}
}

func (x *CommentListResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId             int64  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	CreationDate          string `protobuf:"bytes,2,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	Content               string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	AuthorUsername        string `protobuf:"bytes,4,opt,name=author_username,json=authorUsername,proto3" json:"author_username,omitempty"`
	AuthorProfileImageUrl string `protobuf:"bytes,5,opt,name=author_profile_image_url,json=authorProfileImageUrl,proto3" json:"author_profile_image_url,omitempty"`
	VoteScore             int64  `protobuf:"varint,6,opt,name=vote_score,json=voteScore,proto3" json:"vote_score,omitempty"`
	CurrentUserHasUpvoted bool   `protobuf:"varint,7,opt,name=current_user_has_upvoted,json=currentUserHasUpvoted,proto3" json:"current_user_has_upvoted,omitempty"`
	AuthorId              int64  `protobuf:"varint,8,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	ParentId              int64  `protobuf:"varint,9,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{8}
}

func (x *Comment) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *Comment) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetAuthorUsername() string {
	if x != nil {
		return x.AuthorUsername
	}
	return ""
}

func (x *Comment) GetAuthorProfileImageUrl() string {
	if x != nil {
		return x.AuthorProfileImageUrl
	}
	return ""
}

func (x *Comment) GetVoteScore() int64 {
	if x != nil {
		return x.VoteScore
	}
	return 0
}

func (x *Comment) GetCurrentUserHasUpvoted() bool {
	if x != nil {
		return x.CurrentUserHasUpvoted
	}
	return false
}

func (x *Comment) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Comment) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type VideoMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoLoc    string   `protobuf:"bytes,1,opt,name=videoLoc,proto3" json:"videoLoc,omitempty"` // The location of the DASH manifest
	VideoTitle  string   `protobuf:"bytes,2,opt,name=videoTitle,proto3" json:"videoTitle,omitempty"`
	Rating      float64  `protobuf:"fixed64,3,opt,name=rating,proto3" json:"rating,omitempty"`
	AuthorName  string   `protobuf:"bytes,4,opt,name=authorName,proto3" json:"authorName,omitempty"` // Do I need this? probably not
	Views       uint64   `protobuf:"varint,5,opt,name=views,proto3" json:"views,omitempty"`
	VideoID     int64    `protobuf:"varint,6,opt,name=videoID,proto3" json:"videoID,omitempty"`
	UploadDate  string   `protobuf:"bytes,7,opt,name=uploadDate,proto3" json:"uploadDate,omitempty"`
	Description string   `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	AuthorID    int64    `protobuf:"varint,9,opt,name=authorID,proto3" json:"authorID,omitempty"`
	Tags        []string `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *VideoMetadata) Reset() {
	*x = VideoMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMetadata) ProtoMessage() {}

func (x *VideoMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMetadata.ProtoReflect.Descriptor instead.
func (*VideoMetadata) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{9}
}

func (x *VideoMetadata) GetVideoLoc() string {
	if x != nil {
		return x.VideoLoc
	}
	return ""
}

func (x *VideoMetadata) GetVideoTitle() string {
	if x != nil {
		return x.VideoTitle
	}
	return ""
}

func (x *VideoMetadata) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *VideoMetadata) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *VideoMetadata) GetViews() uint64 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *VideoMetadata) GetVideoID() int64 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

func (x *VideoMetadata) GetUploadDate() string {
	if x != nil {
		return x.UploadDate
	}
	return ""
}

func (x *VideoMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VideoMetadata) GetAuthorID() int64 {
	if x != nil {
		return x.AuthorID
	}
	return 0
}

func (x *VideoMetadata) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type VideoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Videos         []*Video `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	NumberOfVideos int64    `protobuf:"varint,2,opt,name=numberOfVideos,proto3" json:"numberOfVideos,omitempty"`
}

func (x *VideoList) Reset() {
	*x = VideoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoList) ProtoMessage() {}

func (x *VideoList) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoList.ProtoReflect.Descriptor instead.
func (*VideoList) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{10}
}

func (x *VideoList) GetVideos() []*Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *VideoList) GetNumberOfVideos() int64 {
	if x != nil {
		return x.NumberOfVideos
	}
	return 0
}

type Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoTitle   string  `protobuf:"bytes,1,opt,name=videoTitle,proto3" json:"videoTitle,omitempty"`
	Views        uint64  `protobuf:"varint,2,opt,name=views,proto3" json:"views,omitempty"`
	Rating       float64 `protobuf:"fixed64,3,opt,name=rating,proto3" json:"rating,omitempty"`
	ThumbnailLoc string  `protobuf:"bytes,4,opt,name=thumbnailLoc,proto3" json:"thumbnailLoc,omitempty"`
	VideoID      int64   `protobuf:"varint,5,opt,name=videoID,proto3" json:"videoID,omitempty"`
	AuthorName   string  `protobuf:"bytes,6,opt,name=authorName,proto3" json:"authorName,omitempty"`
	UploadDate   string  `protobuf:"bytes,7,opt,name=uploadDate,proto3" json:"uploadDate,omitempty"`
}

func (x *Video) Reset() {
	*x = Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{11}
}

func (x *Video) GetVideoTitle() string {
	if x != nil {
		return x.VideoTitle
	}
	return ""
}

func (x *Video) GetViews() uint64 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *Video) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Video) GetThumbnailLoc() string {
	if x != nil {
		return x.ThumbnailLoc
	}
	return ""
}

func (x *Video) GetVideoID() int64 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

func (x *Video) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *Video) GetUploadDate() string {
	if x != nil {
		return x.UploadDate
	}
	return ""
}

type VideoRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  int64   `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	VideoID int64   `protobuf:"varint,2,opt,name=videoID,proto3" json:"videoID,omitempty"`
	Rating  float32 `protobuf:"fixed32,3,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *VideoRating) Reset() {
	*x = VideoRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoRating) ProtoMessage() {}

func (x *VideoRating) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoRating.ProtoReflect.Descriptor instead.
func (*VideoRating) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{12}
}

func (x *VideoRating) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *VideoRating) GetVideoID() int64 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

func (x *VideoRating) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type VideoViewing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoID int64 `protobuf:"varint,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
}

func (x *VideoViewing) Reset() {
	*x = VideoViewing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoViewing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoViewing) ProtoMessage() {}

func (x *VideoViewing) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoViewing.ProtoReflect.Descriptor instead.
func (*VideoViewing) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{13}
}

func (x *VideoViewing) GetVideoID() int64 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

type VideoApproval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	VideoID int64 `protobuf:"varint,2,opt,name=videoID,proto3" json:"videoID,omitempty"`
}

func (x *VideoApproval) Reset() {
	*x = VideoApproval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoApproval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoApproval) ProtoMessage() {}

func (x *VideoApproval) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoApproval.ProtoReflect.Descriptor instead.
func (*VideoApproval) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{14}
}

func (x *VideoApproval) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *VideoApproval) GetVideoID() int64 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

type VideoQueryConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderBy        OrderCategory `protobuf:"varint,1,opt,name=orderBy,proto3,enum=proto.OrderCategory" json:"orderBy,omitempty"`
	Direction      SortDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=proto.SortDirection" json:"direction,omitempty"`
	PageNumber     int64         `protobuf:"varint,3,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	SearchVal      string        `protobuf:"bytes,4,opt,name=SearchVal,proto3" json:"SearchVal,omitempty"`
	FromUserID     int64         `protobuf:"varint,5,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"` // domestic user ID
	ShowUnapproved bool          `protobuf:"varint,6,opt,name=showUnapproved,proto3" json:"showUnapproved,omitempty"`
}

func (x *VideoQueryConfig) Reset() {
	*x = VideoQueryConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoQueryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoQueryConfig) ProtoMessage() {}

func (x *VideoQueryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoQueryConfig.ProtoReflect.Descriptor instead.
func (*VideoQueryConfig) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{15}
}

func (x *VideoQueryConfig) GetOrderBy() OrderCategory {
	if x != nil {
		return x.OrderBy
	}
	return OrderCategory_views
}

func (x *VideoQueryConfig) GetDirection() SortDirection {
	if x != nil {
		return x.Direction
	}
	return SortDirection_asc
}

func (x *VideoQueryConfig) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *VideoQueryConfig) GetSearchVal() string {
	if x != nil {
		return x.SearchVal
	}
	return ""
}

func (x *VideoQueryConfig) GetFromUserID() int64 {
	if x != nil {
		return x.FromUserID
	}
	return 0
}

func (x *VideoQueryConfig) GetShowUnapproved() bool {
	if x != nil {
		return x.ShowUnapproved
	}
	return false
}

type VideoExistenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=Exists,proto3" json:"Exists,omitempty"`
}

func (x *VideoExistenceResponse) Reset() {
	*x = VideoExistenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoExistenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoExistenceResponse) ProtoMessage() {}

func (x *VideoExistenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoExistenceResponse.ProtoReflect.Descriptor instead.
func (*VideoExistenceResponse) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{16}
}

func (x *VideoExistenceResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type ForeignVideoCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForeignVideoID string  `protobuf:"bytes,1,opt,name=ForeignVideoID,proto3" json:"ForeignVideoID,omitempty"`
	ForeignWebsite Website `protobuf:"varint,2,opt,name=ForeignWebsite,proto3,enum=proto.Website" json:"ForeignWebsite,omitempty"`
}

func (x *ForeignVideoCheck) Reset() {
	*x = ForeignVideoCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForeignVideoCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignVideoCheck) ProtoMessage() {}

func (x *ForeignVideoCheck) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignVideoCheck.ProtoReflect.Descriptor instead.
func (*ForeignVideoCheck) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{17}
}

func (x *ForeignVideoCheck) GetForeignVideoID() string {
	if x != nil {
		return x.ForeignVideoID
	}
	return ""
}

func (x *ForeignVideoCheck) GetForeignWebsite() Website {
	if x != nil {
		return x.ForeignWebsite
	}
	return Website_niconico
}

type VideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoID string `protobuf:"bytes,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
}

func (x *VideoRequest) Reset() {
	*x = VideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoRequest) ProtoMessage() {}

func (x *VideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoRequest.ProtoReflect.Descriptor instead.
func (*VideoRequest) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{18}
}

func (x *VideoRequest) GetVideoID() string {
	if x != nil {
		return x.VideoID
	}
	return ""
}

type InputVideoChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*InputVideoChunk_Content
	//	*InputVideoChunk_Meta
	//	*InputVideoChunk_Rawmeta
	Payload isInputVideoChunk_Payload `protobuf_oneof:"Payload"`
}

func (x *InputVideoChunk) Reset() {
	*x = InputVideoChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputVideoChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputVideoChunk) ProtoMessage() {}

func (x *InputVideoChunk) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputVideoChunk.ProtoReflect.Descriptor instead.
func (*InputVideoChunk) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{19}
}

func (m *InputVideoChunk) GetPayload() isInputVideoChunk_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *InputVideoChunk) GetContent() *FileContent {
	if x, ok := x.GetPayload().(*InputVideoChunk_Content); ok {
		return x.Content
	}
	return nil
}

func (x *InputVideoChunk) GetMeta() *InputFileMetadata {
	if x, ok := x.GetPayload().(*InputVideoChunk_Meta); ok {
		return x.Meta
	}
	return nil
}

func (x *InputVideoChunk) GetRawmeta() *RawMetadata {
	if x, ok := x.GetPayload().(*InputVideoChunk_Rawmeta); ok {
		return x.Rawmeta
	}
	return nil
}

type isInputVideoChunk_Payload interface {
	isInputVideoChunk_Payload()
}

type InputVideoChunk_Content struct {
	Content *FileContent `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type InputVideoChunk_Meta struct {
	Meta *InputFileMetadata `protobuf:"bytes,2,opt,name=meta,proto3,oneof"`
}

type InputVideoChunk_Rawmeta struct {
	Rawmeta *RawMetadata `protobuf:"bytes,3,opt,name=rawmeta,proto3,oneof"` // This was added after the above two fields, and is used for the metadata.json file for the video
}

func (*InputVideoChunk_Content) isInputVideoChunk_Payload() {}

func (*InputVideoChunk_Meta) isInputVideoChunk_Payload() {}

func (*InputVideoChunk_Rawmeta) isInputVideoChunk_Payload() {}

type ResponseVideoChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*ResponseVideoChunk_Content
	//	*ResponseVideoChunk_Meta
	Payload isResponseVideoChunk_Payload `protobuf_oneof:"Payload"`
}

func (x *ResponseVideoChunk) Reset() {
	*x = ResponseVideoChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseVideoChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseVideoChunk) ProtoMessage() {}

func (x *ResponseVideoChunk) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseVideoChunk.ProtoReflect.Descriptor instead.
func (*ResponseVideoChunk) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{20}
}

func (m *ResponseVideoChunk) GetPayload() isResponseVideoChunk_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ResponseVideoChunk) GetContent() *FileContent {
	if x, ok := x.GetPayload().(*ResponseVideoChunk_Content); ok {
		return x.Content
	}
	return nil
}

func (x *ResponseVideoChunk) GetMeta() *ResponseFileMetadata {
	if x, ok := x.GetPayload().(*ResponseVideoChunk_Meta); ok {
		return x.Meta
	}
	return nil
}

type isResponseVideoChunk_Payload interface {
	isResponseVideoChunk_Payload()
}

type ResponseVideoChunk_Content struct {
	Content *FileContent `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type ResponseVideoChunk_Meta struct {
	Meta *ResponseFileMetadata `protobuf:"bytes,2,opt,name=meta,proto3,oneof"`
}

func (*ResponseVideoChunk_Content) isResponseVideoChunk_Payload() {}

func (*ResponseVideoChunk_Meta) isResponseVideoChunk_Payload() {}

type FileContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *FileContent) Reset() {
	*x = FileContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileContent) ProtoMessage() {}

func (x *FileContent) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileContent.ProtoReflect.Descriptor instead.
func (*FileContent) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{21}
}

func (x *FileContent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RawMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *RawMetadata) Reset() {
	*x = RawMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawMetadata) ProtoMessage() {}

func (x *RawMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawMetadata.ProtoReflect.Descriptor instead.
func (*RawMetadata) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{22}
}

func (x *RawMetadata) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Could make the reupload fields optional
type InputFileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description       string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AuthorUID         string   `protobuf:"bytes,3,opt,name=authorUID,proto3" json:"authorUID,omitempty"`                           // 0 if reupload
	OriginalVideoLink string   `protobuf:"bytes,4,opt,name=originalVideoLink,proto3" json:"originalVideoLink,omitempty"`           // If reupload
	AuthorUsername    string   `protobuf:"bytes,5,opt,name=authorUsername,proto3" json:"authorUsername,omitempty"`                 // If reupload
	OriginalSite      Website  `protobuf:"varint,6,opt,name=originalSite,proto3,enum=proto.Website" json:"originalSite,omitempty"` // If reupload
	OriginalID        string   `protobuf:"bytes,7,opt,name=originalID,proto3" json:"originalID,omitempty"`                         // If reupload // this is a little dumb
	DomesticAuthorID  int64    `protobuf:"varint,8,opt,name=domesticAuthorID,proto3" json:"domesticAuthorID,omitempty"`
	Tags              []string `protobuf:"bytes,9,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Thumbnail         []byte   `protobuf:"bytes,10,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"` // lol good enough, I could stream this but this is easier
}

func (x *InputFileMetadata) Reset() {
	*x = InputFileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputFileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputFileMetadata) ProtoMessage() {}

func (x *InputFileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputFileMetadata.ProtoReflect.Descriptor instead.
func (*InputFileMetadata) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{23}
}

func (x *InputFileMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InputFileMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InputFileMetadata) GetAuthorUID() string {
	if x != nil {
		return x.AuthorUID
	}
	return ""
}

func (x *InputFileMetadata) GetOriginalVideoLink() string {
	if x != nil {
		return x.OriginalVideoLink
	}
	return ""
}

func (x *InputFileMetadata) GetAuthorUsername() string {
	if x != nil {
		return x.AuthorUsername
	}
	return ""
}

func (x *InputFileMetadata) GetOriginalSite() Website {
	if x != nil {
		return x.OriginalSite
	}
	return Website_niconico
}

func (x *InputFileMetadata) GetOriginalID() string {
	if x != nil {
		return x.OriginalID
	}
	return ""
}

func (x *InputFileMetadata) GetDomesticAuthorID() int64 {
	if x != nil {
		return x.DomesticAuthorID
	}
	return 0
}

func (x *InputFileMetadata) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *InputFileMetadata) GetThumbnail() []byte {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

// For now, these two are the same, but may deviate in future
type ResponseFileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description       string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AuthorUID         int64  `protobuf:"varint,3,opt,name=authorUID,proto3" json:"authorUID,omitempty"`                // 0 if reupload
	OriginalVideoLink string `protobuf:"bytes,4,opt,name=originalVideoLink,proto3" json:"originalVideoLink,omitempty"` // If reupload
}

func (x *ResponseFileMetadata) Reset() {
	*x = ResponseFileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseFileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFileMetadata) ProtoMessage() {}

func (x *ResponseFileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFileMetadata.ProtoReflect.Descriptor instead.
func (*ResponseFileMetadata) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{24}
}

func (x *ResponseFileMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ResponseFileMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ResponseFileMetadata) GetAuthorUID() int64 {
	if x != nil {
		return x.AuthorUID
	}
	return 0
}

func (x *ResponseFileMetadata) GetOriginalVideoLink() string {
	if x != nil {
		return x.OriginalVideoLink
	}
	return ""
}

type UploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoID int64 `protobuf:"varint,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_protocol_videoservice_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_protocol_videoservice_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_video_service_protocol_videoservice_proto_rawDescGZIP(), []int{25}
}

func (x *UploadResponse) GetVideoID() int64 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

var File_video_service_protocol_videoservice_proto protoreflect.FileDescriptor

var file_video_service_protocol_videoservice_proto_rawDesc = []byte{
	0x0a, 0x29, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x09, 0x0a, 0x07, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x21, 0x0a,
	0x06, 0x72, 0x65, 0x63, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x06, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x63, 0x52, 0x06, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x73, 0x22, 0x68, 0x0a, 0x08, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x63,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x4c, 0x6f, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x22, 0x83,
	0x01, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x64, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x76, 0x6f, 0x74,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x75, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xdb, 0x02, 0x0a, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x75, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x48, 0x61, 0x73, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa5, 0x02, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22,
	0x59, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x05, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x4c,
	0x6f, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x22, 0x57, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x28, 0x0a, 0x0c, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x44, 0x22, 0x41, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x22, 0xfc, 0x01, 0x0a, 0x10, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x61, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a,
	0x0e, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x6e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x6e, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x22, 0x30, 0x0a, 0x16, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x73, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x65, 0x69,
	0x67, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0e,
	0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x57,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x0e, 0x46, 0x6f,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x22, 0x28, 0x0a, 0x0c,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x22, 0xac, 0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x61,
	0x77, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x07, 0x72, 0x61, 0x77, 0x6d, 0x65, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x2e, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x42,
	0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x21, 0x0a, 0x0b, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x21, 0x0a,
	0x0b, 0x52, 0x61, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xf1, 0x02, 0x0a, 0x11, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x64, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x55, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e,
	0x6b, 0x22, 0x2a, 0x0a, 0x0e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x2a, 0x32, 0x0a,
	0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6f,
	0x6e, 0x69, 0x63, 0x6f, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x10,
	0x02, 0x2a, 0x37, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x10, 0x02, 0x2a, 0x22, 0x0a, 0x0d, 0x73, 0x6f,
	0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x61,
	0x73, 0x63, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x10, 0x02, 0x32, 0xf6,
	0x05, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x40, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x12, 0x43, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x12, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x31, 0x0a,
	0x09, 0x72, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x69,
	0x6e, 0x67, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0b, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x11, 0x4d, 0x61,
	0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x12,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x76, 0x6f, 0x74, 0x65, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x36, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6f, 0x72, 0x61, 0x68, 0x6f, 0x72, 0x61, 0x64, 0x65,
	0x76, 0x2f, 0x68, 0x6f, 0x72, 0x61, 0x68, 0x6f, 0x72, 0x61, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_service_protocol_videoservice_proto_rawDescOnce sync.Once
	file_video_service_protocol_videoservice_proto_rawDescData = file_video_service_protocol_videoservice_proto_rawDesc
)

func file_video_service_protocol_videoservice_proto_rawDescGZIP() []byte {
	file_video_service_protocol_videoservice_proto_rawDescOnce.Do(func() {
		file_video_service_protocol_videoservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_service_protocol_videoservice_proto_rawDescData)
	})
	return file_video_service_protocol_videoservice_proto_rawDescData
}

var file_video_service_protocol_videoservice_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_video_service_protocol_videoservice_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_video_service_protocol_videoservice_proto_goTypes = []interface{}{
	(Website)(0),                   // 0: proto.website
	(OrderCategory)(0),             // 1: proto.orderCategory
	(SortDirection)(0),             // 2: proto.sortDirection
	(*Nothing)(nil),                // 3: proto.Nothing
	(*RecReq)(nil),                 // 4: proto.recReq
	(*RecResp)(nil),                // 5: proto.recResp
	(*VideoRec)(nil),               // 6: proto.VideoRec
	(*VideoComment)(nil),           // 7: proto.videoComment
	(*CommentRequest)(nil),         // 8: proto.commentRequest
	(*CommentUpvote)(nil),          // 9: proto.commentUpvote
	(*CommentListResponse)(nil),    // 10: proto.CommentListResponse
	(*Comment)(nil),                // 11: proto.Comment
	(*VideoMetadata)(nil),          // 12: proto.videoMetadata
	(*VideoList)(nil),              // 13: proto.VideoList
	(*Video)(nil),                  // 14: proto.Video
	(*VideoRating)(nil),            // 15: proto.videoRating
	(*VideoViewing)(nil),           // 16: proto.videoViewing
	(*VideoApproval)(nil),          // 17: proto.videoApproval
	(*VideoQueryConfig)(nil),       // 18: proto.VideoQueryConfig
	(*VideoExistenceResponse)(nil), // 19: proto.VideoExistenceResponse
	(*ForeignVideoCheck)(nil),      // 20: proto.ForeignVideoCheck
	(*VideoRequest)(nil),           // 21: proto.VideoRequest
	(*InputVideoChunk)(nil),        // 22: proto.InputVideoChunk
	(*ResponseVideoChunk)(nil),     // 23: proto.ResponseVideoChunk
	(*FileContent)(nil),            // 24: proto.FileContent
	(*RawMetadata)(nil),            // 25: proto.RawMetadata
	(*InputFileMetadata)(nil),      // 26: proto.InputFileMetadata
	(*ResponseFileMetadata)(nil),   // 27: proto.ResponseFileMetadata
	(*UploadResponse)(nil),         // 28: proto.uploadResponse
}
var file_video_service_protocol_videoservice_proto_depIdxs = []int32{
	6,  // 0: proto.recResp.videos:type_name -> proto.VideoRec
	11, // 1: proto.CommentListResponse.comments:type_name -> proto.Comment
	14, // 2: proto.VideoList.videos:type_name -> proto.Video
	1,  // 3: proto.VideoQueryConfig.orderBy:type_name -> proto.orderCategory
	2,  // 4: proto.VideoQueryConfig.direction:type_name -> proto.sortDirection
	0,  // 5: proto.ForeignVideoCheck.ForeignWebsite:type_name -> proto.website
	24, // 6: proto.InputVideoChunk.content:type_name -> proto.FileContent
	26, // 7: proto.InputVideoChunk.meta:type_name -> proto.InputFileMetadata
	25, // 8: proto.InputVideoChunk.rawmeta:type_name -> proto.RawMetadata
	24, // 9: proto.ResponseVideoChunk.content:type_name -> proto.FileContent
	27, // 10: proto.ResponseVideoChunk.meta:type_name -> proto.ResponseFileMetadata
	0,  // 11: proto.InputFileMetadata.originalSite:type_name -> proto.website
	22, // 12: proto.VideoService.uploadVideo:input_type -> proto.InputVideoChunk
	21, // 13: proto.VideoService.downloadVideo:input_type -> proto.VideoRequest
	20, // 14: proto.VideoService.foreignVideoExists:input_type -> proto.ForeignVideoCheck
	18, // 15: proto.VideoService.getVideoList:input_type -> proto.VideoQueryConfig
	21, // 16: proto.VideoService.getVideo:input_type -> proto.VideoRequest
	15, // 17: proto.VideoService.rateVideo:input_type -> proto.videoRating
	16, // 18: proto.VideoService.viewVideo:input_type -> proto.videoViewing
	7,  // 19: proto.VideoService.MakeComment:input_type -> proto.videoComment
	9,  // 20: proto.VideoService.MakeCommentUpvote:input_type -> proto.commentUpvote
	8,  // 21: proto.VideoService.GetCommentsForVideo:input_type -> proto.commentRequest
	4,  // 22: proto.VideoService.GetVideoRecommendations:input_type -> proto.recReq
	17, // 23: proto.VideoService.ApproveVideo:input_type -> proto.videoApproval
	28, // 24: proto.VideoService.uploadVideo:output_type -> proto.uploadResponse
	23, // 25: proto.VideoService.downloadVideo:output_type -> proto.ResponseVideoChunk
	19, // 26: proto.VideoService.foreignVideoExists:output_type -> proto.VideoExistenceResponse
	13, // 27: proto.VideoService.getVideoList:output_type -> proto.VideoList
	12, // 28: proto.VideoService.getVideo:output_type -> proto.videoMetadata
	3,  // 29: proto.VideoService.rateVideo:output_type -> proto.Nothing
	3,  // 30: proto.VideoService.viewVideo:output_type -> proto.Nothing
	3,  // 31: proto.VideoService.MakeComment:output_type -> proto.Nothing
	3,  // 32: proto.VideoService.MakeCommentUpvote:output_type -> proto.Nothing
	10, // 33: proto.VideoService.GetCommentsForVideo:output_type -> proto.CommentListResponse
	5,  // 34: proto.VideoService.GetVideoRecommendations:output_type -> proto.recResp
	3,  // 35: proto.VideoService.ApproveVideo:output_type -> proto.Nothing
	24, // [24:36] is the sub-list for method output_type
	12, // [12:24] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_video_service_protocol_videoservice_proto_init() }
func file_video_service_protocol_videoservice_proto_init() {
	if File_video_service_protocol_videoservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_service_protocol_videoservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nothing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoRec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentUpvote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoViewing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoApproval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoQueryConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoExistenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForeignVideoCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputVideoChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseVideoChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputFileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseFileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_protocol_videoservice_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_video_service_protocol_videoservice_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*InputVideoChunk_Content)(nil),
		(*InputVideoChunk_Meta)(nil),
		(*InputVideoChunk_Rawmeta)(nil),
	}
	file_video_service_protocol_videoservice_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*ResponseVideoChunk_Content)(nil),
		(*ResponseVideoChunk_Meta)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_service_protocol_videoservice_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_service_protocol_videoservice_proto_goTypes,
		DependencyIndexes: file_video_service_protocol_videoservice_proto_depIdxs,
		EnumInfos:         file_video_service_protocol_videoservice_proto_enumTypes,
		MessageInfos:      file_video_service_protocol_videoservice_proto_msgTypes,
	}.Build()
	File_video_service_protocol_videoservice_proto = out.File
	file_video_service_protocol_videoservice_proto_rawDesc = nil
	file_video_service_protocol_videoservice_proto_goTypes = nil
	file_video_service_protocol_videoservice_proto_depIdxs = nil
}
