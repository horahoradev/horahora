// Code generated by protoc-gen-go. DO NOT EDIT.
// source: videoservice.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Website int32

const (
	Website_niconico Website = 0
	Website_bilibili Website = 1
	Website_youtube  Website = 2
)

var Website_name = map[int32]string{
	0: "niconico",
	1: "bilibili",
	2: "youtube",
}

var Website_value = map[string]int32{
	"niconico": 0,
	"bilibili": 1,
	"youtube":  2,
}

func (x Website) String() string {
	return proto.EnumName(Website_name, int32(x))
}

func (Website) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{0}
}

type OrderCategory int32

const (
	OrderCategory_views       OrderCategory = 0
	OrderCategory_rating      OrderCategory = 1
	OrderCategory_upload_date OrderCategory = 2
)

var OrderCategory_name = map[int32]string{
	0: "views",
	1: "rating",
	2: "upload_date",
}

var OrderCategory_value = map[string]int32{
	"views":       0,
	"rating":      1,
	"upload_date": 2,
}

func (x OrderCategory) String() string {
	return proto.EnumName(OrderCategory_name, int32(x))
}

func (OrderCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{1}
}

type SortDirection int32

const (
	SortDirection_asc  SortDirection = 0
	SortDirection_desc SortDirection = 2
)

var SortDirection_name = map[int32]string{
	0: "asc",
	2: "desc",
}

var SortDirection_value = map[string]int32{
	"asc":  0,
	"desc": 2,
}

func (x SortDirection) String() string {
	return proto.EnumName(SortDirection_name, int32(x))
}

func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{2}
}

type Nothing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{0}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

type RecReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecReq) Reset()         { *m = RecReq{} }
func (m *RecReq) String() string { return proto.CompactTextString(m) }
func (*RecReq) ProtoMessage()    {}
func (*RecReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{1}
}

func (m *RecReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecReq.Unmarshal(m, b)
}
func (m *RecReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecReq.Marshal(b, m, deterministic)
}
func (m *RecReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecReq.Merge(m, src)
}
func (m *RecReq) XXX_Size() int {
	return xxx_messageInfo_RecReq.Size(m)
}
func (m *RecReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RecReq.DiscardUnknown(m)
}

var xxx_messageInfo_RecReq proto.InternalMessageInfo

func (m *RecReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type RecResp struct {
	VideoID              []int64  `protobuf:"varint,1,rep,packed,name=videoID,proto3" json:"videoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecResp) Reset()         { *m = RecResp{} }
func (m *RecResp) String() string { return proto.CompactTextString(m) }
func (*RecResp) ProtoMessage()    {}
func (*RecResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{2}
}

func (m *RecResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecResp.Unmarshal(m, b)
}
func (m *RecResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecResp.Marshal(b, m, deterministic)
}
func (m *RecResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecResp.Merge(m, src)
}
func (m *RecResp) XXX_Size() int {
	return xxx_messageInfo_RecResp.Size(m)
}
func (m *RecResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RecResp.DiscardUnknown(m)
}

var xxx_messageInfo_RecResp proto.InternalMessageInfo

func (m *RecResp) GetVideoID() []int64 {
	if m != nil {
		return m.VideoID
	}
	return nil
}

type VideoComment struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId              int64    `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Comment              string   `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	ParentComment        int64    `protobuf:"varint,4,opt,name=parent_comment,json=parentComment,proto3" json:"parent_comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoComment) Reset()         { *m = VideoComment{} }
func (m *VideoComment) String() string { return proto.CompactTextString(m) }
func (*VideoComment) ProtoMessage()    {}
func (*VideoComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{3}
}

func (m *VideoComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoComment.Unmarshal(m, b)
}
func (m *VideoComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoComment.Marshal(b, m, deterministic)
}
func (m *VideoComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoComment.Merge(m, src)
}
func (m *VideoComment) XXX_Size() int {
	return xxx_messageInfo_VideoComment.Size(m)
}
func (m *VideoComment) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoComment.DiscardUnknown(m)
}

var xxx_messageInfo_VideoComment proto.InternalMessageInfo

func (m *VideoComment) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *VideoComment) GetVideoId() int64 {
	if m != nil {
		return m.VideoId
	}
	return 0
}

func (m *VideoComment) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *VideoComment) GetParentComment() int64 {
	if m != nil {
		return m.ParentComment
	}
	return 0
}

// Can add pagination in the future if needed (probably fine without it)
type CommentRequest struct {
	VideoID              int64    `protobuf:"varint,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
	CurrUserID           int64    `protobuf:"varint,2,opt,name=currUserID,proto3" json:"currUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommentRequest) Reset()         { *m = CommentRequest{} }
func (m *CommentRequest) String() string { return proto.CompactTextString(m) }
func (*CommentRequest) ProtoMessage()    {}
func (*CommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{4}
}

func (m *CommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommentRequest.Unmarshal(m, b)
}
func (m *CommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommentRequest.Marshal(b, m, deterministic)
}
func (m *CommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentRequest.Merge(m, src)
}
func (m *CommentRequest) XXX_Size() int {
	return xxx_messageInfo_CommentRequest.Size(m)
}
func (m *CommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommentRequest proto.InternalMessageInfo

func (m *CommentRequest) GetVideoID() int64 {
	if m != nil {
		return m.VideoID
	}
	return 0
}

func (m *CommentRequest) GetCurrUserID() int64 {
	if m != nil {
		return m.CurrUserID
	}
	return 0
}

type CommentUpvote struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommentId            int64    `protobuf:"varint,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	IsUpvote             bool     `protobuf:"varint,3,opt,name=is_upvote,json=isUpvote,proto3" json:"is_upvote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommentUpvote) Reset()         { *m = CommentUpvote{} }
func (m *CommentUpvote) String() string { return proto.CompactTextString(m) }
func (*CommentUpvote) ProtoMessage()    {}
func (*CommentUpvote) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{5}
}

func (m *CommentUpvote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommentUpvote.Unmarshal(m, b)
}
func (m *CommentUpvote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommentUpvote.Marshal(b, m, deterministic)
}
func (m *CommentUpvote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentUpvote.Merge(m, src)
}
func (m *CommentUpvote) XXX_Size() int {
	return xxx_messageInfo_CommentUpvote.Size(m)
}
func (m *CommentUpvote) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentUpvote.DiscardUnknown(m)
}

var xxx_messageInfo_CommentUpvote proto.InternalMessageInfo

func (m *CommentUpvote) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CommentUpvote) GetCommentId() int64 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

func (m *CommentUpvote) GetIsUpvote() bool {
	if m != nil {
		return m.IsUpvote
	}
	return false
}

type CommentListResponse struct {
	Comments             []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CommentListResponse) Reset()         { *m = CommentListResponse{} }
func (m *CommentListResponse) String() string { return proto.CompactTextString(m) }
func (*CommentListResponse) ProtoMessage()    {}
func (*CommentListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{6}
}

func (m *CommentListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommentListResponse.Unmarshal(m, b)
}
func (m *CommentListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommentListResponse.Marshal(b, m, deterministic)
}
func (m *CommentListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentListResponse.Merge(m, src)
}
func (m *CommentListResponse) XXX_Size() int {
	return xxx_messageInfo_CommentListResponse.Size(m)
}
func (m *CommentListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommentListResponse proto.InternalMessageInfo

func (m *CommentListResponse) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

type Comment struct {
	CommentId             int64    `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	CreationDate          string   `protobuf:"bytes,2,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	Content               string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	AuthorUsername        string   `protobuf:"bytes,4,opt,name=author_username,json=authorUsername,proto3" json:"author_username,omitempty"`
	AuthorProfileImageUrl string   `protobuf:"bytes,5,opt,name=author_profile_image_url,json=authorProfileImageUrl,proto3" json:"author_profile_image_url,omitempty"`
	VoteScore             int64    `protobuf:"varint,6,opt,name=vote_score,json=voteScore,proto3" json:"vote_score,omitempty"`
	CurrentUserHasUpvoted bool     `protobuf:"varint,7,opt,name=current_user_has_upvoted,json=currentUserHasUpvoted,proto3" json:"current_user_has_upvoted,omitempty"`
	AuthorId              int64    `protobuf:"varint,8,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	ParentId              int64    `protobuf:"varint,9,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{7}
}

func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetCommentId() int64 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

func (m *Comment) GetCreationDate() string {
	if m != nil {
		return m.CreationDate
	}
	return ""
}

func (m *Comment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Comment) GetAuthorUsername() string {
	if m != nil {
		return m.AuthorUsername
	}
	return ""
}

func (m *Comment) GetAuthorProfileImageUrl() string {
	if m != nil {
		return m.AuthorProfileImageUrl
	}
	return ""
}

func (m *Comment) GetVoteScore() int64 {
	if m != nil {
		return m.VoteScore
	}
	return 0
}

func (m *Comment) GetCurrentUserHasUpvoted() bool {
	if m != nil {
		return m.CurrentUserHasUpvoted
	}
	return false
}

func (m *Comment) GetAuthorId() int64 {
	if m != nil {
		return m.AuthorId
	}
	return 0
}

func (m *Comment) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

type VideoMetadata struct {
	VideoLoc             string   `protobuf:"bytes,1,opt,name=videoLoc,proto3" json:"videoLoc,omitempty"`
	VideoTitle           string   `protobuf:"bytes,2,opt,name=videoTitle,proto3" json:"videoTitle,omitempty"`
	Rating               float64  `protobuf:"fixed64,3,opt,name=rating,proto3" json:"rating,omitempty"`
	AuthorName           string   `protobuf:"bytes,4,opt,name=authorName,proto3" json:"authorName,omitempty"`
	Views                uint64   `protobuf:"varint,5,opt,name=views,proto3" json:"views,omitempty"`
	VideoID              int64    `protobuf:"varint,6,opt,name=videoID,proto3" json:"videoID,omitempty"`
	UploadDate           string   `protobuf:"bytes,7,opt,name=uploadDate,proto3" json:"uploadDate,omitempty"`
	Description          string   `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	AuthorID             int64    `protobuf:"varint,9,opt,name=authorID,proto3" json:"authorID,omitempty"`
	Tags                 []string `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoMetadata) Reset()         { *m = VideoMetadata{} }
func (m *VideoMetadata) String() string { return proto.CompactTextString(m) }
func (*VideoMetadata) ProtoMessage()    {}
func (*VideoMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{8}
}

func (m *VideoMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoMetadata.Unmarshal(m, b)
}
func (m *VideoMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoMetadata.Marshal(b, m, deterministic)
}
func (m *VideoMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoMetadata.Merge(m, src)
}
func (m *VideoMetadata) XXX_Size() int {
	return xxx_messageInfo_VideoMetadata.Size(m)
}
func (m *VideoMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_VideoMetadata proto.InternalMessageInfo

func (m *VideoMetadata) GetVideoLoc() string {
	if m != nil {
		return m.VideoLoc
	}
	return ""
}

func (m *VideoMetadata) GetVideoTitle() string {
	if m != nil {
		return m.VideoTitle
	}
	return ""
}

func (m *VideoMetadata) GetRating() float64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *VideoMetadata) GetAuthorName() string {
	if m != nil {
		return m.AuthorName
	}
	return ""
}

func (m *VideoMetadata) GetViews() uint64 {
	if m != nil {
		return m.Views
	}
	return 0
}

func (m *VideoMetadata) GetVideoID() int64 {
	if m != nil {
		return m.VideoID
	}
	return 0
}

func (m *VideoMetadata) GetUploadDate() string {
	if m != nil {
		return m.UploadDate
	}
	return ""
}

func (m *VideoMetadata) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *VideoMetadata) GetAuthorID() int64 {
	if m != nil {
		return m.AuthorID
	}
	return 0
}

func (m *VideoMetadata) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type VideoList struct {
	Videos               []*Video `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	NumberOfVideos       int64    `protobuf:"varint,2,opt,name=numberOfVideos,proto3" json:"numberOfVideos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoList) Reset()         { *m = VideoList{} }
func (m *VideoList) String() string { return proto.CompactTextString(m) }
func (*VideoList) ProtoMessage()    {}
func (*VideoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{9}
}

func (m *VideoList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoList.Unmarshal(m, b)
}
func (m *VideoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoList.Marshal(b, m, deterministic)
}
func (m *VideoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoList.Merge(m, src)
}
func (m *VideoList) XXX_Size() int {
	return xxx_messageInfo_VideoList.Size(m)
}
func (m *VideoList) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoList.DiscardUnknown(m)
}

var xxx_messageInfo_VideoList proto.InternalMessageInfo

func (m *VideoList) GetVideos() []*Video {
	if m != nil {
		return m.Videos
	}
	return nil
}

func (m *VideoList) GetNumberOfVideos() int64 {
	if m != nil {
		return m.NumberOfVideos
	}
	return 0
}

type Video struct {
	VideoTitle           string   `protobuf:"bytes,1,opt,name=videoTitle,proto3" json:"videoTitle,omitempty"`
	Views                uint64   `protobuf:"varint,2,opt,name=views,proto3" json:"views,omitempty"`
	Rating               float64  `protobuf:"fixed64,3,opt,name=rating,proto3" json:"rating,omitempty"`
	ThumbnailLoc         string   `protobuf:"bytes,4,opt,name=thumbnailLoc,proto3" json:"thumbnailLoc,omitempty"`
	VideoID              int64    `protobuf:"varint,5,opt,name=videoID,proto3" json:"videoID,omitempty"`
	AuthorName           string   `protobuf:"bytes,6,opt,name=authorName,proto3" json:"authorName,omitempty"`
	UploadDate           string   `protobuf:"bytes,7,opt,name=uploadDate,proto3" json:"uploadDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Video) Reset()         { *m = Video{} }
func (m *Video) String() string { return proto.CompactTextString(m) }
func (*Video) ProtoMessage()    {}
func (*Video) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{10}
}

func (m *Video) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Video.Unmarshal(m, b)
}
func (m *Video) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Video.Marshal(b, m, deterministic)
}
func (m *Video) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Video.Merge(m, src)
}
func (m *Video) XXX_Size() int {
	return xxx_messageInfo_Video.Size(m)
}
func (m *Video) XXX_DiscardUnknown() {
	xxx_messageInfo_Video.DiscardUnknown(m)
}

var xxx_messageInfo_Video proto.InternalMessageInfo

func (m *Video) GetVideoTitle() string {
	if m != nil {
		return m.VideoTitle
	}
	return ""
}

func (m *Video) GetViews() uint64 {
	if m != nil {
		return m.Views
	}
	return 0
}

func (m *Video) GetRating() float64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Video) GetThumbnailLoc() string {
	if m != nil {
		return m.ThumbnailLoc
	}
	return ""
}

func (m *Video) GetVideoID() int64 {
	if m != nil {
		return m.VideoID
	}
	return 0
}

func (m *Video) GetAuthorName() string {
	if m != nil {
		return m.AuthorName
	}
	return ""
}

func (m *Video) GetUploadDate() string {
	if m != nil {
		return m.UploadDate
	}
	return ""
}

type VideoRating struct {
	UserID               int64    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	VideoID              int64    `protobuf:"varint,2,opt,name=videoID,proto3" json:"videoID,omitempty"`
	Rating               float32  `protobuf:"fixed32,3,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoRating) Reset()         { *m = VideoRating{} }
func (m *VideoRating) String() string { return proto.CompactTextString(m) }
func (*VideoRating) ProtoMessage()    {}
func (*VideoRating) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{11}
}

func (m *VideoRating) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoRating.Unmarshal(m, b)
}
func (m *VideoRating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoRating.Marshal(b, m, deterministic)
}
func (m *VideoRating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoRating.Merge(m, src)
}
func (m *VideoRating) XXX_Size() int {
	return xxx_messageInfo_VideoRating.Size(m)
}
func (m *VideoRating) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoRating.DiscardUnknown(m)
}

var xxx_messageInfo_VideoRating proto.InternalMessageInfo

func (m *VideoRating) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *VideoRating) GetVideoID() int64 {
	if m != nil {
		return m.VideoID
	}
	return 0
}

func (m *VideoRating) GetRating() float32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

type VideoViewing struct {
	VideoID              int64    `protobuf:"varint,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoViewing) Reset()         { *m = VideoViewing{} }
func (m *VideoViewing) String() string { return proto.CompactTextString(m) }
func (*VideoViewing) ProtoMessage()    {}
func (*VideoViewing) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{12}
}

func (m *VideoViewing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoViewing.Unmarshal(m, b)
}
func (m *VideoViewing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoViewing.Marshal(b, m, deterministic)
}
func (m *VideoViewing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoViewing.Merge(m, src)
}
func (m *VideoViewing) XXX_Size() int {
	return xxx_messageInfo_VideoViewing.Size(m)
}
func (m *VideoViewing) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoViewing.DiscardUnknown(m)
}

var xxx_messageInfo_VideoViewing proto.InternalMessageInfo

func (m *VideoViewing) GetVideoID() int64 {
	if m != nil {
		return m.VideoID
	}
	return 0
}

type VideoApproval struct {
	UserID               int64    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	VideoID              int64    `protobuf:"varint,2,opt,name=videoID,proto3" json:"videoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoApproval) Reset()         { *m = VideoApproval{} }
func (m *VideoApproval) String() string { return proto.CompactTextString(m) }
func (*VideoApproval) ProtoMessage()    {}
func (*VideoApproval) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{13}
}

func (m *VideoApproval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoApproval.Unmarshal(m, b)
}
func (m *VideoApproval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoApproval.Marshal(b, m, deterministic)
}
func (m *VideoApproval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoApproval.Merge(m, src)
}
func (m *VideoApproval) XXX_Size() int {
	return xxx_messageInfo_VideoApproval.Size(m)
}
func (m *VideoApproval) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoApproval.DiscardUnknown(m)
}

var xxx_messageInfo_VideoApproval proto.InternalMessageInfo

func (m *VideoApproval) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *VideoApproval) GetVideoID() int64 {
	if m != nil {
		return m.VideoID
	}
	return 0
}

type VideoQueryConfig struct {
	OrderBy              OrderCategory `protobuf:"varint,1,opt,name=orderBy,proto3,enum=proto.OrderCategory" json:"orderBy,omitempty"`
	Direction            SortDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=proto.SortDirection" json:"direction,omitempty"`
	PageNumber           int64         `protobuf:"varint,3,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	ContainsTag          string        `protobuf:"bytes,4,opt,name=containsTag,proto3" json:"containsTag,omitempty"`
	FromUserID           int64         `protobuf:"varint,5,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	ShowUnapproved       bool          `protobuf:"varint,6,opt,name=showUnapproved,proto3" json:"showUnapproved,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VideoQueryConfig) Reset()         { *m = VideoQueryConfig{} }
func (m *VideoQueryConfig) String() string { return proto.CompactTextString(m) }
func (*VideoQueryConfig) ProtoMessage()    {}
func (*VideoQueryConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{14}
}

func (m *VideoQueryConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoQueryConfig.Unmarshal(m, b)
}
func (m *VideoQueryConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoQueryConfig.Marshal(b, m, deterministic)
}
func (m *VideoQueryConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoQueryConfig.Merge(m, src)
}
func (m *VideoQueryConfig) XXX_Size() int {
	return xxx_messageInfo_VideoQueryConfig.Size(m)
}
func (m *VideoQueryConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoQueryConfig.DiscardUnknown(m)
}

var xxx_messageInfo_VideoQueryConfig proto.InternalMessageInfo

func (m *VideoQueryConfig) GetOrderBy() OrderCategory {
	if m != nil {
		return m.OrderBy
	}
	return OrderCategory_views
}

func (m *VideoQueryConfig) GetDirection() SortDirection {
	if m != nil {
		return m.Direction
	}
	return SortDirection_asc
}

func (m *VideoQueryConfig) GetPageNumber() int64 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *VideoQueryConfig) GetContainsTag() string {
	if m != nil {
		return m.ContainsTag
	}
	return ""
}

func (m *VideoQueryConfig) GetFromUserID() int64 {
	if m != nil {
		return m.FromUserID
	}
	return 0
}

func (m *VideoQueryConfig) GetShowUnapproved() bool {
	if m != nil {
		return m.ShowUnapproved
	}
	return false
}

type VideoExistenceResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=Exists,proto3" json:"Exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoExistenceResponse) Reset()         { *m = VideoExistenceResponse{} }
func (m *VideoExistenceResponse) String() string { return proto.CompactTextString(m) }
func (*VideoExistenceResponse) ProtoMessage()    {}
func (*VideoExistenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{15}
}

func (m *VideoExistenceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoExistenceResponse.Unmarshal(m, b)
}
func (m *VideoExistenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoExistenceResponse.Marshal(b, m, deterministic)
}
func (m *VideoExistenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoExistenceResponse.Merge(m, src)
}
func (m *VideoExistenceResponse) XXX_Size() int {
	return xxx_messageInfo_VideoExistenceResponse.Size(m)
}
func (m *VideoExistenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoExistenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VideoExistenceResponse proto.InternalMessageInfo

func (m *VideoExistenceResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type ForeignVideoCheck struct {
	ForeignVideoID       string   `protobuf:"bytes,1,opt,name=ForeignVideoID,proto3" json:"ForeignVideoID,omitempty"`
	ForeignWebsite       Website  `protobuf:"varint,2,opt,name=ForeignWebsite,proto3,enum=proto.Website" json:"ForeignWebsite,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForeignVideoCheck) Reset()         { *m = ForeignVideoCheck{} }
func (m *ForeignVideoCheck) String() string { return proto.CompactTextString(m) }
func (*ForeignVideoCheck) ProtoMessage()    {}
func (*ForeignVideoCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{16}
}

func (m *ForeignVideoCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForeignVideoCheck.Unmarshal(m, b)
}
func (m *ForeignVideoCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForeignVideoCheck.Marshal(b, m, deterministic)
}
func (m *ForeignVideoCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForeignVideoCheck.Merge(m, src)
}
func (m *ForeignVideoCheck) XXX_Size() int {
	return xxx_messageInfo_ForeignVideoCheck.Size(m)
}
func (m *ForeignVideoCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_ForeignVideoCheck.DiscardUnknown(m)
}

var xxx_messageInfo_ForeignVideoCheck proto.InternalMessageInfo

func (m *ForeignVideoCheck) GetForeignVideoID() string {
	if m != nil {
		return m.ForeignVideoID
	}
	return ""
}

func (m *ForeignVideoCheck) GetForeignWebsite() Website {
	if m != nil {
		return m.ForeignWebsite
	}
	return Website_niconico
}

type VideoRequest struct {
	VideoID              string   `protobuf:"bytes,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoRequest) Reset()         { *m = VideoRequest{} }
func (m *VideoRequest) String() string { return proto.CompactTextString(m) }
func (*VideoRequest) ProtoMessage()    {}
func (*VideoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{17}
}

func (m *VideoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoRequest.Unmarshal(m, b)
}
func (m *VideoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoRequest.Marshal(b, m, deterministic)
}
func (m *VideoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoRequest.Merge(m, src)
}
func (m *VideoRequest) XXX_Size() int {
	return xxx_messageInfo_VideoRequest.Size(m)
}
func (m *VideoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VideoRequest proto.InternalMessageInfo

func (m *VideoRequest) GetVideoID() string {
	if m != nil {
		return m.VideoID
	}
	return ""
}

type InputVideoChunk struct {
	// Types that are valid to be assigned to Payload:
	//	*InputVideoChunk_Content
	//	*InputVideoChunk_Meta
	//	*InputVideoChunk_Rawmeta
	Payload              isInputVideoChunk_Payload `protobuf_oneof:"Payload"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *InputVideoChunk) Reset()         { *m = InputVideoChunk{} }
func (m *InputVideoChunk) String() string { return proto.CompactTextString(m) }
func (*InputVideoChunk) ProtoMessage()    {}
func (*InputVideoChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{18}
}

func (m *InputVideoChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InputVideoChunk.Unmarshal(m, b)
}
func (m *InputVideoChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InputVideoChunk.Marshal(b, m, deterministic)
}
func (m *InputVideoChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputVideoChunk.Merge(m, src)
}
func (m *InputVideoChunk) XXX_Size() int {
	return xxx_messageInfo_InputVideoChunk.Size(m)
}
func (m *InputVideoChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_InputVideoChunk.DiscardUnknown(m)
}

var xxx_messageInfo_InputVideoChunk proto.InternalMessageInfo

type isInputVideoChunk_Payload interface {
	isInputVideoChunk_Payload()
}

type InputVideoChunk_Content struct {
	Content *FileContent `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type InputVideoChunk_Meta struct {
	Meta *InputFileMetadata `protobuf:"bytes,2,opt,name=meta,proto3,oneof"`
}

type InputVideoChunk_Rawmeta struct {
	Rawmeta *RawMetadata `protobuf:"bytes,3,opt,name=rawmeta,proto3,oneof"`
}

func (*InputVideoChunk_Content) isInputVideoChunk_Payload() {}

func (*InputVideoChunk_Meta) isInputVideoChunk_Payload() {}

func (*InputVideoChunk_Rawmeta) isInputVideoChunk_Payload() {}

func (m *InputVideoChunk) GetPayload() isInputVideoChunk_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *InputVideoChunk) GetContent() *FileContent {
	if x, ok := m.GetPayload().(*InputVideoChunk_Content); ok {
		return x.Content
	}
	return nil
}

func (m *InputVideoChunk) GetMeta() *InputFileMetadata {
	if x, ok := m.GetPayload().(*InputVideoChunk_Meta); ok {
		return x.Meta
	}
	return nil
}

func (m *InputVideoChunk) GetRawmeta() *RawMetadata {
	if x, ok := m.GetPayload().(*InputVideoChunk_Rawmeta); ok {
		return x.Rawmeta
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*InputVideoChunk) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*InputVideoChunk_Content)(nil),
		(*InputVideoChunk_Meta)(nil),
		(*InputVideoChunk_Rawmeta)(nil),
	}
}

type ResponseVideoChunk struct {
	// Types that are valid to be assigned to Payload:
	//	*ResponseVideoChunk_Content
	//	*ResponseVideoChunk_Meta
	Payload              isResponseVideoChunk_Payload `protobuf_oneof:"Payload"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ResponseVideoChunk) Reset()         { *m = ResponseVideoChunk{} }
func (m *ResponseVideoChunk) String() string { return proto.CompactTextString(m) }
func (*ResponseVideoChunk) ProtoMessage()    {}
func (*ResponseVideoChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{19}
}

func (m *ResponseVideoChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseVideoChunk.Unmarshal(m, b)
}
func (m *ResponseVideoChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseVideoChunk.Marshal(b, m, deterministic)
}
func (m *ResponseVideoChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseVideoChunk.Merge(m, src)
}
func (m *ResponseVideoChunk) XXX_Size() int {
	return xxx_messageInfo_ResponseVideoChunk.Size(m)
}
func (m *ResponseVideoChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseVideoChunk.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseVideoChunk proto.InternalMessageInfo

type isResponseVideoChunk_Payload interface {
	isResponseVideoChunk_Payload()
}

type ResponseVideoChunk_Content struct {
	Content *FileContent `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type ResponseVideoChunk_Meta struct {
	Meta *ResponseFileMetadata `protobuf:"bytes,2,opt,name=meta,proto3,oneof"`
}

func (*ResponseVideoChunk_Content) isResponseVideoChunk_Payload() {}

func (*ResponseVideoChunk_Meta) isResponseVideoChunk_Payload() {}

func (m *ResponseVideoChunk) GetPayload() isResponseVideoChunk_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *ResponseVideoChunk) GetContent() *FileContent {
	if x, ok := m.GetPayload().(*ResponseVideoChunk_Content); ok {
		return x.Content
	}
	return nil
}

func (m *ResponseVideoChunk) GetMeta() *ResponseFileMetadata {
	if x, ok := m.GetPayload().(*ResponseVideoChunk_Meta); ok {
		return x.Meta
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResponseVideoChunk) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResponseVideoChunk_Content)(nil),
		(*ResponseVideoChunk_Meta)(nil),
	}
}

type FileContent struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileContent) Reset()         { *m = FileContent{} }
func (m *FileContent) String() string { return proto.CompactTextString(m) }
func (*FileContent) ProtoMessage()    {}
func (*FileContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{20}
}

func (m *FileContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileContent.Unmarshal(m, b)
}
func (m *FileContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileContent.Marshal(b, m, deterministic)
}
func (m *FileContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileContent.Merge(m, src)
}
func (m *FileContent) XXX_Size() int {
	return xxx_messageInfo_FileContent.Size(m)
}
func (m *FileContent) XXX_DiscardUnknown() {
	xxx_messageInfo_FileContent.DiscardUnknown(m)
}

var xxx_messageInfo_FileContent proto.InternalMessageInfo

func (m *FileContent) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RawMetadata struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawMetadata) Reset()         { *m = RawMetadata{} }
func (m *RawMetadata) String() string { return proto.CompactTextString(m) }
func (*RawMetadata) ProtoMessage()    {}
func (*RawMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{21}
}

func (m *RawMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawMetadata.Unmarshal(m, b)
}
func (m *RawMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawMetadata.Marshal(b, m, deterministic)
}
func (m *RawMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawMetadata.Merge(m, src)
}
func (m *RawMetadata) XXX_Size() int {
	return xxx_messageInfo_RawMetadata.Size(m)
}
func (m *RawMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_RawMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_RawMetadata proto.InternalMessageInfo

func (m *RawMetadata) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Could make the reupload fields optional
type InputFileMetadata struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AuthorUID            string   `protobuf:"bytes,3,opt,name=authorUID,proto3" json:"authorUID,omitempty"`
	OriginalVideoLink    string   `protobuf:"bytes,4,opt,name=originalVideoLink,proto3" json:"originalVideoLink,omitempty"`
	AuthorUsername       string   `protobuf:"bytes,5,opt,name=authorUsername,proto3" json:"authorUsername,omitempty"`
	OriginalSite         Website  `protobuf:"varint,6,opt,name=originalSite,proto3,enum=proto.Website" json:"originalSite,omitempty"`
	OriginalID           string   `protobuf:"bytes,7,opt,name=originalID,proto3" json:"originalID,omitempty"`
	DomesticAuthorID     int64    `protobuf:"varint,8,opt,name=domesticAuthorID,proto3" json:"domesticAuthorID,omitempty"`
	Tags                 []string `protobuf:"bytes,9,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Thumbnail            []byte   `protobuf:"bytes,10,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InputFileMetadata) Reset()         { *m = InputFileMetadata{} }
func (m *InputFileMetadata) String() string { return proto.CompactTextString(m) }
func (*InputFileMetadata) ProtoMessage()    {}
func (*InputFileMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{22}
}

func (m *InputFileMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InputFileMetadata.Unmarshal(m, b)
}
func (m *InputFileMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InputFileMetadata.Marshal(b, m, deterministic)
}
func (m *InputFileMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputFileMetadata.Merge(m, src)
}
func (m *InputFileMetadata) XXX_Size() int {
	return xxx_messageInfo_InputFileMetadata.Size(m)
}
func (m *InputFileMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_InputFileMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_InputFileMetadata proto.InternalMessageInfo

func (m *InputFileMetadata) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *InputFileMetadata) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InputFileMetadata) GetAuthorUID() string {
	if m != nil {
		return m.AuthorUID
	}
	return ""
}

func (m *InputFileMetadata) GetOriginalVideoLink() string {
	if m != nil {
		return m.OriginalVideoLink
	}
	return ""
}

func (m *InputFileMetadata) GetAuthorUsername() string {
	if m != nil {
		return m.AuthorUsername
	}
	return ""
}

func (m *InputFileMetadata) GetOriginalSite() Website {
	if m != nil {
		return m.OriginalSite
	}
	return Website_niconico
}

func (m *InputFileMetadata) GetOriginalID() string {
	if m != nil {
		return m.OriginalID
	}
	return ""
}

func (m *InputFileMetadata) GetDomesticAuthorID() int64 {
	if m != nil {
		return m.DomesticAuthorID
	}
	return 0
}

func (m *InputFileMetadata) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *InputFileMetadata) GetThumbnail() []byte {
	if m != nil {
		return m.Thumbnail
	}
	return nil
}

// For now, these two are the same, but may deviate in future
type ResponseFileMetadata struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AuthorUID            int64    `protobuf:"varint,3,opt,name=authorUID,proto3" json:"authorUID,omitempty"`
	OriginalVideoLink    string   `protobuf:"bytes,4,opt,name=originalVideoLink,proto3" json:"originalVideoLink,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseFileMetadata) Reset()         { *m = ResponseFileMetadata{} }
func (m *ResponseFileMetadata) String() string { return proto.CompactTextString(m) }
func (*ResponseFileMetadata) ProtoMessage()    {}
func (*ResponseFileMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{23}
}

func (m *ResponseFileMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseFileMetadata.Unmarshal(m, b)
}
func (m *ResponseFileMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseFileMetadata.Marshal(b, m, deterministic)
}
func (m *ResponseFileMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseFileMetadata.Merge(m, src)
}
func (m *ResponseFileMetadata) XXX_Size() int {
	return xxx_messageInfo_ResponseFileMetadata.Size(m)
}
func (m *ResponseFileMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseFileMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseFileMetadata proto.InternalMessageInfo

func (m *ResponseFileMetadata) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ResponseFileMetadata) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ResponseFileMetadata) GetAuthorUID() int64 {
	if m != nil {
		return m.AuthorUID
	}
	return 0
}

func (m *ResponseFileMetadata) GetOriginalVideoLink() string {
	if m != nil {
		return m.OriginalVideoLink
	}
	return ""
}

type UploadResponse struct {
	VideoID              int64    `protobuf:"varint,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadResponse) Reset()         { *m = UploadResponse{} }
func (m *UploadResponse) String() string { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()    {}
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{24}
}

func (m *UploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadResponse.Unmarshal(m, b)
}
func (m *UploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadResponse.Marshal(b, m, deterministic)
}
func (m *UploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadResponse.Merge(m, src)
}
func (m *UploadResponse) XXX_Size() int {
	return xxx_messageInfo_UploadResponse.Size(m)
}
func (m *UploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadResponse proto.InternalMessageInfo

func (m *UploadResponse) GetVideoID() int64 {
	if m != nil {
		return m.VideoID
	}
	return 0
}

func init() {
	proto.RegisterEnum("proto.Website", Website_name, Website_value)
	proto.RegisterEnum("proto.OrderCategory", OrderCategory_name, OrderCategory_value)
	proto.RegisterEnum("proto.SortDirection", SortDirection_name, SortDirection_value)
	proto.RegisterType((*Nothing)(nil), "proto.Nothing")
	proto.RegisterType((*RecReq)(nil), "proto.recReq")
	proto.RegisterType((*RecResp)(nil), "proto.recResp")
	proto.RegisterType((*VideoComment)(nil), "proto.videoComment")
	proto.RegisterType((*CommentRequest)(nil), "proto.commentRequest")
	proto.RegisterType((*CommentUpvote)(nil), "proto.commentUpvote")
	proto.RegisterType((*CommentListResponse)(nil), "proto.CommentListResponse")
	proto.RegisterType((*Comment)(nil), "proto.Comment")
	proto.RegisterType((*VideoMetadata)(nil), "proto.videoMetadata")
	proto.RegisterType((*VideoList)(nil), "proto.VideoList")
	proto.RegisterType((*Video)(nil), "proto.Video")
	proto.RegisterType((*VideoRating)(nil), "proto.videoRating")
	proto.RegisterType((*VideoViewing)(nil), "proto.videoViewing")
	proto.RegisterType((*VideoApproval)(nil), "proto.videoApproval")
	proto.RegisterType((*VideoQueryConfig)(nil), "proto.VideoQueryConfig")
	proto.RegisterType((*VideoExistenceResponse)(nil), "proto.VideoExistenceResponse")
	proto.RegisterType((*ForeignVideoCheck)(nil), "proto.ForeignVideoCheck")
	proto.RegisterType((*VideoRequest)(nil), "proto.VideoRequest")
	proto.RegisterType((*InputVideoChunk)(nil), "proto.InputVideoChunk")
	proto.RegisterType((*ResponseVideoChunk)(nil), "proto.ResponseVideoChunk")
	proto.RegisterType((*FileContent)(nil), "proto.FileContent")
	proto.RegisterType((*RawMetadata)(nil), "proto.RawMetadata")
	proto.RegisterType((*InputFileMetadata)(nil), "proto.InputFileMetadata")
	proto.RegisterType((*ResponseFileMetadata)(nil), "proto.ResponseFileMetadata")
	proto.RegisterType((*UploadResponse)(nil), "proto.uploadResponse")
}

func init() { proto.RegisterFile("videoservice.proto", fileDescriptor_673ac1e0917b87c1) }

var fileDescriptor_673ac1e0917b87c1 = []byte{
	// 1494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0x4b, 0x6f, 0x1b, 0xb7,
	0x13, 0xd7, 0x4a, 0xb6, 0xa4, 0x1d, 0x3d, 0x22, 0x33, 0xb1, 0xa3, 0x38, 0xff, 0xfc, 0xe1, 0x30,
	0x7d, 0x18, 0x46, 0x61, 0x24, 0x6a, 0x91, 0x00, 0xcd, 0xa5, 0x8e, 0xd5, 0x24, 0x0a, 0xf2, 0x2a,
	0x13, 0x27, 0xe8, 0x49, 0xa0, 0xb5, 0xb4, 0x4c, 0x58, 0xda, 0x55, 0xb8, 0x5c, 0xab, 0xbe, 0x15,
	0xed, 0xb7, 0xe8, 0xbd, 0xb7, 0x7e, 0x9b, 0x1e, 0xfb, 0x29, 0x7a, 0xe9, 0xb9, 0xe0, 0x4b, 0xe2,
	0x4a, 0x32, 0x8a, 0x3e, 0x0e, 0x82, 0x96, 0x3f, 0xce, 0x0c, 0x87, 0xbf, 0x19, 0xce, 0x90, 0x80,
	0xce, 0x79, 0xc4, 0x92, 0x94, 0x89, 0x73, 0x3e, 0x60, 0xfb, 0x13, 0x91, 0xc8, 0x04, 0xad, 0xeb,
	0x3f, 0x1c, 0x42, 0xe5, 0x65, 0x22, 0x4f, 0x79, 0x3c, 0xc4, 0xb7, 0xa1, 0x2c, 0xd8, 0x80, 0xb0,
	0x0f, 0xe8, 0x3a, 0x54, 0xb2, 0x94, 0x89, 0x3e, 0x8f, 0xda, 0xc1, 0x4e, 0xb0, 0x5b, 0x22, 0x65,
	0x35, 0xec, 0x45, 0xf8, 0x0e, 0x54, 0xb4, 0x48, 0x3a, 0x41, 0x6d, 0xa8, 0x68, 0xab, 0xbd, 0x6e,
	0x3b, 0xd8, 0x29, 0xed, 0x96, 0x88, 0x1b, 0xe2, 0x1f, 0x03, 0xa8, 0xeb, 0xef, 0xc3, 0x64, 0x3c,
	0x66, 0xb1, 0xbc, 0xd4, 0x1c, 0xba, 0x01, 0x55, 0x2d, 0xa8, 0x66, 0x8a, 0x7a, 0xc6, 0x1a, 0x89,
	0x94, 0xf9, 0x81, 0x51, 0x6f, 0x97, 0x76, 0x82, 0xdd, 0x90, 0xb8, 0x21, 0xfa, 0x18, 0x9a, 0x13,
	0x2a, 0x58, 0x2c, 0xfb, 0x4e, 0x60, 0x4d, 0xab, 0x36, 0x0c, 0x6a, 0x17, 0xc5, 0xcf, 0xa0, 0x69,
	0xe7, 0x09, 0xfb, 0x90, 0xb1, 0x54, 0xe6, 0x3d, 0xf6, 0x16, 0xeb, 0xa2, 0xff, 0x03, 0x0c, 0x32,
	0x21, 0x8e, 0x94, 0x57, 0x5d, 0xeb, 0x89, 0x87, 0xe0, 0x08, 0x1a, 0xd6, 0xd6, 0xd1, 0xe4, 0x3c,
	0x91, 0xec, 0xf2, 0x1d, 0xdd, 0x02, 0xb0, 0x92, 0xf3, 0x3d, 0x85, 0x16, 0xe9, 0x45, 0xe8, 0x26,
	0x84, 0x3c, 0xed, 0x67, 0xda, 0x88, 0xde, 0x57, 0x95, 0x54, 0x79, 0x6a, 0x8c, 0xe2, 0x03, 0xb8,
	0x6a, 0x9d, 0x7f, 0xce, 0x53, 0xa9, 0x48, 0x4e, 0xe2, 0x94, 0xa1, 0x3d, 0xa8, 0x5a, 0x03, 0xa9,
	0x66, 0xba, 0xd6, 0x69, 0x9a, 0x10, 0xee, 0x5b, 0x69, 0x32, 0x9b, 0xc7, 0xbf, 0x15, 0xa1, 0xe2,
	0x58, 0xcf, 0xbb, 0x12, 0x2c, 0xba, 0x72, 0x07, 0x1a, 0x03, 0xc1, 0xa8, 0xe4, 0x49, 0xdc, 0x8f,
	0xa8, 0x64, 0xda, 0xd9, 0x90, 0xd4, 0x1d, 0xd8, 0xa5, 0x92, 0x99, 0x28, 0xc4, 0x32, 0x17, 0x05,
	0x3d, 0x44, 0x9f, 0xc2, 0x15, 0x9a, 0xc9, 0xd3, 0x44, 0xf4, 0xd5, 0xce, 0x63, 0x3a, 0x66, 0x3a,
	0x0c, 0x21, 0x69, 0x1a, 0xf8, 0xc8, 0xa2, 0xe8, 0x01, 0xb4, 0xad, 0xe0, 0x44, 0x24, 0x27, 0x7c,
	0xc4, 0xfa, 0x7c, 0x4c, 0x87, 0xac, 0x9f, 0x89, 0x51, 0x7b, 0x5d, 0x6b, 0x6c, 0x9a, 0xf9, 0xd7,
	0x66, 0xba, 0xa7, 0x66, 0x8f, 0xc4, 0x48, 0xf9, 0xaf, 0x68, 0xe9, 0xa7, 0x83, 0x44, 0xb0, 0x76,
	0xd9, 0xf8, 0xaf, 0x90, 0x37, 0x0a, 0x50, 0x76, 0x55, 0x84, 0xd4, 0xf6, 0x74, 0x28, 0x4e, 0xa9,
	0x23, 0x36, 0x6a, 0x57, 0x34, 0xb3, 0x9b, 0x76, 0x5e, 0xb9, 0xf2, 0x94, 0x5a, 0x96, 0x75, 0x0c,
	0xac, 0x43, 0x3c, 0x6a, 0x57, 0xb5, 0xd9, 0xaa, 0x01, 0x4c, 0x80, 0x6c, 0x72, 0xf1, 0xa8, 0x1d,
	0x9a, 0x49, 0x03, 0xf4, 0x22, 0xfc, 0x73, 0x11, 0x1a, 0x3a, 0x65, 0x5e, 0x30, 0x49, 0x23, 0x2a,
	0x29, 0xda, 0xb6, 0x09, 0xfc, 0x3c, 0x19, 0x68, 0x86, 0x43, 0x32, 0x1b, 0xab, 0xa4, 0xd2, 0xdf,
	0x6f, 0xb9, 0x1c, 0x39, 0x76, 0x3d, 0x04, 0x6d, 0x41, 0x59, 0x50, 0xc9, 0xe3, 0xa1, 0xa6, 0x36,
	0x20, 0x76, 0xa4, 0xf4, 0x8c, 0x3b, 0x2f, 0xe7, 0xa4, 0x7a, 0x08, 0xba, 0x06, 0xeb, 0xe7, 0x9c,
	0x4d, 0x53, 0xcd, 0xde, 0x1a, 0x31, 0x03, 0x3f, 0xb9, 0xcb, 0x4b, 0xc9, 0x9d, 0x4d, 0x46, 0x09,
	0x8d, 0x54, 0x44, 0x35, 0x35, 0x21, 0xf1, 0x10, 0xb4, 0x03, 0xb5, 0x88, 0xa5, 0x03, 0xc1, 0x27,
	0x2a, 0xec, 0x9a, 0x91, 0x90, 0xf8, 0x90, 0xda, 0xa5, 0x25, 0xa8, 0xeb, 0x38, 0x71, 0x63, 0x84,
	0x60, 0x4d, 0xd2, 0x61, 0xda, 0x86, 0x9d, 0xd2, 0x6e, 0x48, 0xf4, 0x37, 0xfe, 0x16, 0xc2, 0x77,
	0x9a, 0x05, 0x9e, 0x4a, 0xf4, 0x11, 0x94, 0x4d, 0xf5, 0xb1, 0xc9, 0x5b, 0xb7, 0xc9, 0xab, 0x25,
	0x88, 0x9d, 0x43, 0x9f, 0x40, 0x33, 0xce, 0xc6, 0xc7, 0x4c, 0xbc, 0x3a, 0x79, 0x67, 0xa4, 0xcd,
	0xd9, 0x59, 0x40, 0xf1, 0xaf, 0x01, 0xac, 0xeb, 0xcf, 0x05, 0x7a, 0x83, 0x25, 0x7a, 0x67, 0x34,
	0x15, 0x7d, 0x9a, 0x2e, 0x23, 0x1d, 0x43, 0x5d, 0x9e, 0x66, 0xe3, 0xe3, 0x98, 0xf2, 0x91, 0x0a,
	0xa6, 0xa1, 0x3d, 0x87, 0xf9, 0x14, 0xaf, 0x2f, 0x51, 0xec, 0x85, 0xac, 0xbc, 0x14, 0xb2, 0xbf,
	0x08, 0x01, 0x7e, 0x0f, 0x35, 0x6d, 0x8a, 0x18, 0x67, 0xb6, 0xc0, 0x94, 0x93, 0x6e, 0xae, 0xb8,
	0x74, 0x7d, 0x07, 0x8a, 0x79, 0x07, 0xf2, 0xdb, 0x2a, 0xba, 0x6d, 0xe1, 0x5d, 0x5b, 0x89, 0xdf,
	0x71, 0x36, 0x55, 0x96, 0x2f, 0x2d, 0x81, 0xf8, 0xc0, 0xa6, 0xf6, 0xc1, 0x64, 0x22, 0x92, 0x73,
	0x3a, 0xfa, 0xfb, 0x4e, 0xe0, 0xef, 0x8b, 0xd0, 0xd2, 0xb1, 0xf9, 0x26, 0x63, 0xe2, 0xe2, 0x30,
	0x89, 0x4f, 0xf8, 0x10, 0xed, 0x43, 0x25, 0x11, 0x11, 0x13, 0x8f, 0x2e, 0xb4, 0x9d, 0x66, 0xe7,
	0x9a, 0x8d, 0xbf, 0x46, 0x0f, 0xa9, 0x64, 0xc3, 0x44, 0x5c, 0x10, 0x27, 0x84, 0x3a, 0x10, 0x46,
	0x5c, 0xb0, 0x81, 0xce, 0xc5, 0x62, 0x4e, 0x23, 0x4d, 0x84, 0xec, 0xba, 0x39, 0x32, 0x17, 0x53,
	0xf4, 0x4e, 0xe8, 0x90, 0xbd, 0xd4, 0xa9, 0xa2, 0x19, 0x28, 0x11, 0x0f, 0x51, 0x19, 0xae, 0xca,
	0x16, 0xe5, 0x71, 0xfa, 0x96, 0x0e, 0x6d, 0x6c, 0x7d, 0x48, 0x59, 0x38, 0x11, 0xc9, 0xd8, 0x36,
	0x00, 0x13, 0x5d, 0x0f, 0x51, 0xe9, 0x99, 0x9e, 0x26, 0xd3, 0xa3, 0x98, 0x6a, 0x7a, 0x58, 0xa4,
	0x83, 0x5c, 0x25, 0x0b, 0x28, 0xbe, 0x0b, 0x5b, 0x9a, 0x81, 0xaf, 0xbf, 0xe3, 0xa9, 0x64, 0xf1,
	0x80, 0xcd, 0xaa, 0xf8, 0x16, 0x94, 0x35, 0x98, 0x6a, 0x1a, 0xaa, 0xc4, 0x8e, 0x70, 0x0a, 0x1b,
	0x8f, 0x13, 0xc1, 0xf8, 0x30, 0xd6, 0x8a, 0x87, 0xa7, 0x6c, 0x70, 0xa6, 0x96, 0xf3, 0x41, 0x1b,
	0x83, 0x90, 0x2c, 0xa0, 0xe8, 0xfe, 0x4c, 0xee, 0x3d, 0x3b, 0x4e, 0xb9, 0x2d, 0xe2, 0xcd, 0x59,
	0x83, 0x98, 0x1a, 0x94, 0x2c, 0x48, 0xa9, 0xb4, 0x30, 0xc7, 0x6f, 0x75, 0x67, 0x0c, 0xe7, 0x31,
	0xfd, 0x25, 0x80, 0x2b, 0xbd, 0x78, 0x92, 0x49, 0xeb, 0x5d, 0x16, 0x9f, 0xa9, 0x90, 0xba, 0xa6,
	0xa0, 0xa4, 0x6b, 0x1d, 0x64, 0x97, 0x7b, 0xcc, 0x47, 0xec, 0xd0, 0xcc, 0x3c, 0x2d, 0xcc, 0x5b,
	0xc5, 0x3e, 0xac, 0x8d, 0x99, 0xa4, 0xda, 0xb7, 0x5a, 0xa7, 0x6d, 0x85, 0xb5, 0x55, 0xa5, 0xe1,
	0x8a, 0xe9, 0xd3, 0x02, 0xd1, 0x72, 0xca, 0xbe, 0xa0, 0x53, 0xad, 0x52, 0xca, 0xd9, 0x27, 0x74,
	0xea, 0x09, 0x3b, 0xa1, 0x47, 0x21, 0x54, 0x5e, 0xd3, 0x0b, 0x75, 0x98, 0xf0, 0x0f, 0x01, 0x20,
	0x47, 0xf9, 0xbf, 0xf0, 0xf8, 0x5e, 0xce, 0xe3, 0x9b, 0x6e, 0x79, 0x6b, 0x78, 0x95, 0xd3, 0xbe,
	0x13, 0xb7, 0xa1, 0xe6, 0xd9, 0x55, 0x15, 0xb2, 0x4b, 0x25, 0xd5, 0x2b, 0xd7, 0x89, 0xfe, 0x56,
	0x22, 0xde, 0x66, 0x56, 0x8a, 0xfc, 0x5e, 0x84, 0x8d, 0x25, 0x8e, 0x54, 0x55, 0x93, 0x5e, 0xc1,
	0x33, 0x83, 0xc5, 0x12, 0x5e, 0x5c, 0x2e, 0xe1, 0xff, 0x73, 0x4d, 0xef, 0xa8, 0xd7, 0xb5, 0xad,
	0x7c, 0x0e, 0xa0, 0xcf, 0x60, 0x23, 0x11, 0x7c, 0xc8, 0x63, 0x3a, 0xb2, 0x85, 0x3b, 0x3e, 0xb3,
	0xc7, 0x64, 0x79, 0x42, 0x65, 0x67, 0xbe, 0xc7, 0xdb, 0x3e, 0xbe, 0xd8, 0xf9, 0x3b, 0x50, 0x77,
	0xca, 0x6f, 0x54, 0x6e, 0x96, 0x57, 0xe6, 0x66, 0x4e, 0x46, 0x1d, 0x44, 0x37, 0xee, 0x75, 0x5d,
	0xa5, 0x9c, 0x23, 0x68, 0x0f, 0x5a, 0x51, 0x32, 0x66, 0xa9, 0xe4, 0x83, 0x03, 0xd7, 0x92, 0x4c,
	0x0f, 0x5f, 0xc2, 0x15, 0xab, 0x6f, 0x55, 0x6b, 0x0a, 0x4d, 0x6b, 0x52, 0xdf, 0x8a, 0x87, 0x59,
	0x4d, 0x6f, 0x83, 0xa6, 0x7b, 0x0e, 0xe0, 0x9f, 0x02, 0xb8, 0xb6, 0x2a, 0xca, 0xff, 0x1d, 0xed,
	0xa5, 0x7f, 0x4c, 0x3b, 0xde, 0x83, 0xa6, 0x69, 0x19, 0xb3, 0x9a, 0x72, 0x69, 0x35, 0xdf, 0xeb,
	0x40, 0xc5, 0xf2, 0x8b, 0xea, 0x50, 0x8d, 0xf9, 0x20, 0x51, 0xbf, 0x56, 0x41, 0x8d, 0x8e, 0xf9,
	0x88, 0xab, 0x5f, 0x2b, 0x40, 0x35, 0xa8, 0x5c, 0x24, 0x99, 0xcc, 0x8e, 0x59, 0xab, 0xb8, 0xf7,
	0x00, 0x1a, 0xb9, 0x9a, 0x8c, 0x42, 0xdb, 0x41, 0x5b, 0x05, 0x04, 0xae, 0xbf, 0xb4, 0x02, 0x74,
	0x05, 0x6a, 0xc6, 0x0f, 0x7d, 0x6d, 0x6c, 0x15, 0xf7, 0x30, 0x34, 0x72, 0xa5, 0x19, 0x55, 0xa0,
	0x44, 0xd3, 0x41, 0xab, 0x80, 0xaa, 0xb0, 0xa6, 0xd8, 0x68, 0x15, 0x3b, 0x7f, 0xac, 0xdb, 0x92,
	0xf3, 0xc6, 0x3c, 0x42, 0xd0, 0x57, 0xce, 0x8a, 0xe9, 0xe6, 0x5b, 0x7e, 0x55, 0x98, 0x9f, 0xdc,
	0xed, 0x4d, 0x8b, 0xe7, 0x77, 0x8e, 0x0b, 0xbb, 0x01, 0x3a, 0x84, 0x46, 0x94, 0x4c, 0xe3, 0xb9,
	0x8d, 0xab, 0xb9, 0x9b, 0x85, 0x29, 0x6d, 0xdb, 0x37, 0x16, 0x0e, 0xef, 0xdc, 0x36, 0x2e, 0xdc,
	0x0d, 0xd0, 0x2b, 0x40, 0x27, 0x5e, 0x4d, 0x35, 0x45, 0x19, 0xb9, 0x1a, 0xb5, 0x54, 0x99, 0xb7,
	0x6f, 0xf9, 0x6b, 0x2c, 0x55, 0x79, 0x5c, 0x40, 0x0f, 0xa1, 0x3e, 0x64, 0x72, 0x7e, 0xfd, 0xb9,
	0xee, 0x2b, 0x78, 0x8d, 0x71, 0xbb, 0xe5, 0x4f, 0x28, 0x51, 0x5c, 0x40, 0x0f, 0xa0, 0xea, 0x94,
	0x57, 0xef, 0xc6, 0xb5, 0xc2, 0xdc, 0x2d, 0x14, 0x17, 0xd0, 0x3d, 0x08, 0x05, 0x95, 0x66, 0x73,
	0x08, 0xf9, 0x42, 0xe6, 0x4a, 0xb1, 0xed, 0x4e, 0x9d, 0x7b, 0xeb, 0x15, 0x54, 0xa3, 0x55, 0xd1,
	0xcd, 0x2f, 0xe6, 0x5f, 0x16, 0x56, 0xe8, 0x7c, 0x01, 0xb5, 0x17, 0xf4, 0x8c, 0xb9, 0x17, 0x46,
	0x4e, 0xcb, 0x82, 0x2b, 0xb4, 0x1e, 0xc2, 0x86, 0xa7, 0x65, 0x5f, 0x50, 0x6e, 0x27, 0xb9, 0x77,
	0xd5, 0x0a, 0xe5, 0x67, 0x70, 0xf5, 0x09, 0x73, 0x8f, 0xba, 0xf4, 0x71, 0x22, 0x8c, 0xc3, 0x9b,
	0x79, 0x75, 0xc7, 0xcf, 0x76, 0xfe, 0x65, 0xe4, 0xbf, 0xa3, 0x70, 0x01, 0x7d, 0x09, 0xd7, 0x9f,
	0x58, 0x7a, 0x09, 0x33, 0x9a, 0x91, 0x7e, 0xeb, 0xa4, 0xa8, 0x61, 0x15, 0xcd, 0x03, 0x78, 0xe6,
	0x87, 0x7d, 0xec, 0xe2, 0x02, 0xba, 0x0f, 0x75, 0x73, 0x35, 0xb2, 0x24, 0xe7, 0x22, 0xe1, 0x2e,
	0x4d, 0xcb, 0xfe, 0x1f, 0x97, 0x35, 0xf0, 0xf9, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x9f,
	0x26, 0xa8, 0x83, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VideoServiceClient is the client API for VideoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VideoServiceClient interface {
	UploadVideo(ctx context.Context, opts ...grpc.CallOption) (VideoService_UploadVideoClient, error)
	DownloadVideo(ctx context.Context, in *VideoRequest, opts ...grpc.CallOption) (VideoService_DownloadVideoClient, error)
	ForeignVideoExists(ctx context.Context, in *ForeignVideoCheck, opts ...grpc.CallOption) (*VideoExistenceResponse, error)
	GetVideoList(ctx context.Context, in *VideoQueryConfig, opts ...grpc.CallOption) (*VideoList, error)
	GetVideo(ctx context.Context, in *VideoRequest, opts ...grpc.CallOption) (*VideoMetadata, error)
	RateVideo(ctx context.Context, in *VideoRating, opts ...grpc.CallOption) (*Nothing, error)
	ViewVideo(ctx context.Context, in *VideoViewing, opts ...grpc.CallOption) (*Nothing, error)
	MakeComment(ctx context.Context, in *VideoComment, opts ...grpc.CallOption) (*Nothing, error)
	MakeCommentUpvote(ctx context.Context, in *CommentUpvote, opts ...grpc.CallOption) (*Nothing, error)
	GetCommentsForVideo(ctx context.Context, in *CommentRequest, opts ...grpc.CallOption) (*CommentListResponse, error)
	GetVideoRecommendations(ctx context.Context, in *RecReq, opts ...grpc.CallOption) (*RecResp, error)
	ApproveVideo(ctx context.Context, in *VideoApproval, opts ...grpc.CallOption) (*Nothing, error)
}

type videoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVideoServiceClient(cc grpc.ClientConnInterface) VideoServiceClient {
	return &videoServiceClient{cc}
}

func (c *videoServiceClient) UploadVideo(ctx context.Context, opts ...grpc.CallOption) (VideoService_UploadVideoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VideoService_serviceDesc.Streams[0], "/proto.VideoService/uploadVideo", opts...)
	if err != nil {
		return nil, err
	}
	x := &videoServiceUploadVideoClient{stream}
	return x, nil
}

type VideoService_UploadVideoClient interface {
	Send(*InputVideoChunk) error
	CloseAndRecv() (*UploadResponse, error)
	grpc.ClientStream
}

type videoServiceUploadVideoClient struct {
	grpc.ClientStream
}

func (x *videoServiceUploadVideoClient) Send(m *InputVideoChunk) error {
	return x.ClientStream.SendMsg(m)
}

func (x *videoServiceUploadVideoClient) CloseAndRecv() (*UploadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *videoServiceClient) DownloadVideo(ctx context.Context, in *VideoRequest, opts ...grpc.CallOption) (VideoService_DownloadVideoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VideoService_serviceDesc.Streams[1], "/proto.VideoService/downloadVideo", opts...)
	if err != nil {
		return nil, err
	}
	x := &videoServiceDownloadVideoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VideoService_DownloadVideoClient interface {
	Recv() (*ResponseVideoChunk, error)
	grpc.ClientStream
}

type videoServiceDownloadVideoClient struct {
	grpc.ClientStream
}

func (x *videoServiceDownloadVideoClient) Recv() (*ResponseVideoChunk, error) {
	m := new(ResponseVideoChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *videoServiceClient) ForeignVideoExists(ctx context.Context, in *ForeignVideoCheck, opts ...grpc.CallOption) (*VideoExistenceResponse, error) {
	out := new(VideoExistenceResponse)
	err := c.cc.Invoke(ctx, "/proto.VideoService/foreignVideoExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) GetVideoList(ctx context.Context, in *VideoQueryConfig, opts ...grpc.CallOption) (*VideoList, error) {
	out := new(VideoList)
	err := c.cc.Invoke(ctx, "/proto.VideoService/getVideoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) GetVideo(ctx context.Context, in *VideoRequest, opts ...grpc.CallOption) (*VideoMetadata, error) {
	out := new(VideoMetadata)
	err := c.cc.Invoke(ctx, "/proto.VideoService/getVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) RateVideo(ctx context.Context, in *VideoRating, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/proto.VideoService/rateVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) ViewVideo(ctx context.Context, in *VideoViewing, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/proto.VideoService/viewVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) MakeComment(ctx context.Context, in *VideoComment, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/proto.VideoService/MakeComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) MakeCommentUpvote(ctx context.Context, in *CommentUpvote, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/proto.VideoService/MakeCommentUpvote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) GetCommentsForVideo(ctx context.Context, in *CommentRequest, opts ...grpc.CallOption) (*CommentListResponse, error) {
	out := new(CommentListResponse)
	err := c.cc.Invoke(ctx, "/proto.VideoService/GetCommentsForVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) GetVideoRecommendations(ctx context.Context, in *RecReq, opts ...grpc.CallOption) (*RecResp, error) {
	out := new(RecResp)
	err := c.cc.Invoke(ctx, "/proto.VideoService/GetVideoRecommendations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoServiceClient) ApproveVideo(ctx context.Context, in *VideoApproval, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/proto.VideoService/ApproveVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VideoServiceServer is the server API for VideoService service.
type VideoServiceServer interface {
	UploadVideo(VideoService_UploadVideoServer) error
	DownloadVideo(*VideoRequest, VideoService_DownloadVideoServer) error
	ForeignVideoExists(context.Context, *ForeignVideoCheck) (*VideoExistenceResponse, error)
	GetVideoList(context.Context, *VideoQueryConfig) (*VideoList, error)
	GetVideo(context.Context, *VideoRequest) (*VideoMetadata, error)
	RateVideo(context.Context, *VideoRating) (*Nothing, error)
	ViewVideo(context.Context, *VideoViewing) (*Nothing, error)
	MakeComment(context.Context, *VideoComment) (*Nothing, error)
	MakeCommentUpvote(context.Context, *CommentUpvote) (*Nothing, error)
	GetCommentsForVideo(context.Context, *CommentRequest) (*CommentListResponse, error)
	GetVideoRecommendations(context.Context, *RecReq) (*RecResp, error)
	ApproveVideo(context.Context, *VideoApproval) (*Nothing, error)
}

// UnimplementedVideoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVideoServiceServer struct {
}

func (*UnimplementedVideoServiceServer) UploadVideo(srv VideoService_UploadVideoServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadVideo not implemented")
}
func (*UnimplementedVideoServiceServer) DownloadVideo(req *VideoRequest, srv VideoService_DownloadVideoServer) error {
	return status.Errorf(codes.Unimplemented, "method DownloadVideo not implemented")
}
func (*UnimplementedVideoServiceServer) ForeignVideoExists(ctx context.Context, req *ForeignVideoCheck) (*VideoExistenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForeignVideoExists not implemented")
}
func (*UnimplementedVideoServiceServer) GetVideoList(ctx context.Context, req *VideoQueryConfig) (*VideoList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVideoList not implemented")
}
func (*UnimplementedVideoServiceServer) GetVideo(ctx context.Context, req *VideoRequest) (*VideoMetadata, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVideo not implemented")
}
func (*UnimplementedVideoServiceServer) RateVideo(ctx context.Context, req *VideoRating) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RateVideo not implemented")
}
func (*UnimplementedVideoServiceServer) ViewVideo(ctx context.Context, req *VideoViewing) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewVideo not implemented")
}
func (*UnimplementedVideoServiceServer) MakeComment(ctx context.Context, req *VideoComment) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeComment not implemented")
}
func (*UnimplementedVideoServiceServer) MakeCommentUpvote(ctx context.Context, req *CommentUpvote) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeCommentUpvote not implemented")
}
func (*UnimplementedVideoServiceServer) GetCommentsForVideo(ctx context.Context, req *CommentRequest) (*CommentListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommentsForVideo not implemented")
}
func (*UnimplementedVideoServiceServer) GetVideoRecommendations(ctx context.Context, req *RecReq) (*RecResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVideoRecommendations not implemented")
}
func (*UnimplementedVideoServiceServer) ApproveVideo(ctx context.Context, req *VideoApproval) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApproveVideo not implemented")
}

func RegisterVideoServiceServer(s *grpc.Server, srv VideoServiceServer) {
	s.RegisterService(&_VideoService_serviceDesc, srv)
}

func _VideoService_UploadVideo_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(VideoServiceServer).UploadVideo(&videoServiceUploadVideoServer{stream})
}

type VideoService_UploadVideoServer interface {
	SendAndClose(*UploadResponse) error
	Recv() (*InputVideoChunk, error)
	grpc.ServerStream
}

type videoServiceUploadVideoServer struct {
	grpc.ServerStream
}

func (x *videoServiceUploadVideoServer) SendAndClose(m *UploadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *videoServiceUploadVideoServer) Recv() (*InputVideoChunk, error) {
	m := new(InputVideoChunk)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _VideoService_DownloadVideo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VideoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VideoServiceServer).DownloadVideo(m, &videoServiceDownloadVideoServer{stream})
}

type VideoService_DownloadVideoServer interface {
	Send(*ResponseVideoChunk) error
	grpc.ServerStream
}

type videoServiceDownloadVideoServer struct {
	grpc.ServerStream
}

func (x *videoServiceDownloadVideoServer) Send(m *ResponseVideoChunk) error {
	return x.ServerStream.SendMsg(m)
}

func _VideoService_ForeignVideoExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForeignVideoCheck)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).ForeignVideoExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.VideoService/ForeignVideoExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).ForeignVideoExists(ctx, req.(*ForeignVideoCheck))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_GetVideoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoQueryConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).GetVideoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.VideoService/GetVideoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).GetVideoList(ctx, req.(*VideoQueryConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_GetVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).GetVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.VideoService/GetVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).GetVideo(ctx, req.(*VideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_RateVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoRating)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).RateVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.VideoService/RateVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).RateVideo(ctx, req.(*VideoRating))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_ViewVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoViewing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).ViewVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.VideoService/ViewVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).ViewVideo(ctx, req.(*VideoViewing))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_MakeComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).MakeComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.VideoService/MakeComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).MakeComment(ctx, req.(*VideoComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_MakeCommentUpvote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommentUpvote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).MakeCommentUpvote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.VideoService/MakeCommentUpvote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).MakeCommentUpvote(ctx, req.(*CommentUpvote))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_GetCommentsForVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).GetCommentsForVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.VideoService/GetCommentsForVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).GetCommentsForVideo(ctx, req.(*CommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_GetVideoRecommendations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).GetVideoRecommendations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.VideoService/GetVideoRecommendations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).GetVideoRecommendations(ctx, req.(*RecReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoService_ApproveVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoApproval)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).ApproveVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.VideoService/ApproveVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).ApproveVideo(ctx, req.(*VideoApproval))
	}
	return interceptor(ctx, in, info, handler)
}

var _VideoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.VideoService",
	HandlerType: (*VideoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "foreignVideoExists",
			Handler:    _VideoService_ForeignVideoExists_Handler,
		},
		{
			MethodName: "getVideoList",
			Handler:    _VideoService_GetVideoList_Handler,
		},
		{
			MethodName: "getVideo",
			Handler:    _VideoService_GetVideo_Handler,
		},
		{
			MethodName: "rateVideo",
			Handler:    _VideoService_RateVideo_Handler,
		},
		{
			MethodName: "viewVideo",
			Handler:    _VideoService_ViewVideo_Handler,
		},
		{
			MethodName: "MakeComment",
			Handler:    _VideoService_MakeComment_Handler,
		},
		{
			MethodName: "MakeCommentUpvote",
			Handler:    _VideoService_MakeCommentUpvote_Handler,
		},
		{
			MethodName: "GetCommentsForVideo",
			Handler:    _VideoService_GetCommentsForVideo_Handler,
		},
		{
			MethodName: "GetVideoRecommendations",
			Handler:    _VideoService_GetVideoRecommendations_Handler,
		},
		{
			MethodName: "ApproveVideo",
			Handler:    _VideoService_ApproveVideo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "uploadVideo",
			Handler:       _VideoService_UploadVideo_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "downloadVideo",
			Handler:       _VideoService_DownloadVideo_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "videoservice.proto",
}
