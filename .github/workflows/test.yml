name: Build and test

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the stack
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: user_service
          push: true
          tags: ${{ steps.meta.outputs.tags }}_userservice
          labels: ${{ steps.meta.outputs.labels }}_userservice
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: video_service
          push: true
          tags: ${{ steps.meta.outputs.tags }}_videoservice
          labels: ${{ steps.meta.outputs.labels }}_videoservice
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: scheduler
          push: true
          tags: ${{ steps.meta.outputs.tags }}_scheduler
          labels: ${{ steps.meta.outputs.labels }}_scheduler
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}_Frontend
          labels: ${{ steps.meta.outputs.labels }}_frontend
        run: make up
      - name: wait 60s
        run: sleep 60s
      - name: Run integration tests
        run: go run tests/main.go
      - name: print relevant logs (frontend)
        run: docker logs $(docker ps | grep "frontend" | awk '{print $1}')
        if: always()
      - name: print relevant logs (videoservice)
        run: docker logs $(docker ps | grep "videoservice" | awk '{print $1}')
        if: always()
      - name: print relevant logs (userservice)
        run: docker logs $(docker ps | grep "userservice" | awk '{print $1}')
        if: always()
      - name: print relevant logs (scheduler)
        run: docker logs $(docker ps | grep "scheduler" | awk '{print $1}')
        if: always()
      - name: print relevant logs (redis)
        run: docker logs $(docker ps | grep "redis" | awk '{print $1}')
        if: always()
      - name: print relevant logs (postgres)
        run: docker logs $(docker ps | grep "postgres" | awk '{print $1}')
        if: always()