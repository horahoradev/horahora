package meta

import (
	"fmt"
	codegenlib "horahora/cli/src/lib/codegen"
	"io/fs"
	"os"
	"path/filepath"
	"strings"
)

const schemaFolder string = "schema"
const metaSchemaFileName = "meta.schema.json"
const resultFilename = "export.go"

// Inline the metaschema JSON into a golang module.
//
// TODO: generate interface/struct of said JSON.
func GenerateMetaSchema() {
	cwd, err := os.Getwd()

	if err != nil {
		panic(err)
	}

	metaSchemaPath := filepath.Join(cwd, schemaFolder, metaSchemaFileName)
	metaSchemaJSON, err := os.ReadFile(metaSchemaPath)

	if err != nil {
		panic(err)
	}

	outputPath := filepath.Join(cwd, "cli", "src", "codegen", "schema", "meta", resultFilename)
	outputSlice := []string{
		codegenlib.CommentMultiline("This file was generated by codegen, do not edit it manually."),
		"package meta\n",
		fmt.Sprintf("var MetaJSONSchema = []byte(`%v`)", string(metaSchemaJSON)),
	}
	outputContent := strings.Join(outputSlice, "\n")

	writeErr := os.WriteFile(outputPath, []byte(outputContent), fs.ModePerm)

	if writeErr != nil {
		panic(err)
	}
}
